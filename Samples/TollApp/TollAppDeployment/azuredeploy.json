{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "user": {
      "type": "string",
      "metadata": {
        "description": "User parameter will be used to create a unique Azure Stream Analytics Toll App Demo. Use 15 characters or less for this parameter."
      }
    },
    "interval": {
      "type": "string",
      "metadata": {
        "description": "The frequency to which the Toll App WebJob sends data."
      }
    }
  },
  "variables": {
    "functionAppName": "[concat('tollfuncapp',parameters('user'))]",
    "functionAppPlanName": "[concat('tollfuncapp',parameters('user'))]",
    "webAppName": "[concat('tollapp',parameters('user'))]",
    "webAppPlanSkuName": "S1",
    "repoURL": "https://github.com/meyergm/testasa.git",
    "branch": "master",
    "storageAccountName": "[concat('tollapp',parameters('user'),'sa')]",
    "lowerCaseStorageAccountName": "[toLower(variables('storageAccountName'))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "storageAccountType": "Standard_LRS",
    "storageContainer": "data",
    "eventHub": "[concat('tollapp',parameters('user'),'-','eventhub')]",
    "entryStream": "entrystream",
    "exitStream": "exitstream",
    "cosmosDB": "[concat('tollapp',parameters('user'),'-','cosmos')]",
    "cosmosDBDatabaseName": "tollAppDatabase",
    "cosmosDBCollectionName": "tollAppCollection",
    "cosmosDBOfferType": "Standard",
    "azureStreamAnalyticsJob1": "[concat('TollData',parameters('user'))]",
    "consumergroups_asajob_name": "asajob",
    "eventHubAuthRule": "[concat(variables('eventHub'),'/RootManageSharedAccessKey')]",
    "registrationFileBlob": "registration.json",
    "webJobName": "tollapp",
    "deploymentLogLink": "https://ms.portal.azure.com"
  },
  "resources": [
    {
      "apiVersion": "2015-04-08",
      "name": "[variables('cosmosDB')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('cosmosDB')]",
        "databaseAccountOfferType": "[variables('cosmosDBOfferType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "dependsOn": [],
      "apiVersion": "2015-06-15",
      "name": "[variables('lowerCaseStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "storageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "dependsOn": [],
      "apiVersion": "2015-08-01",
      "name": "[variables('eventHub')]",
      "type": "Microsoft.EventHub/namespaces",
      "kind": "EventHub",
      "location": "Central US",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "tags": {},
      "properties": {
        "serviceBusEndpoint": "[concat('https://', variables('eventHub'),'.servicebus.windows.net:443/')]"
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[variables('eventHubAuthRule')]",
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[concat(variables('eventHub'),'/',variables('entryStream'))]",
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "location": "Central US",
      "properties": {
        "messageRetentionInDays": 7
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]",
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHub'), variables('entryStream'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[concat(variables('eventHub'),'/',variables('entryStream'),'/',Variables('consumergroups_asajob_name'))]",
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "location": "[resourceGroup().location]",
      "properties": {
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[concat(variables('eventHub'),'/',variables('exitStream'))]",
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "location": "Central US",
      "properties": {
        "messageRetentionInDays": 7
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]",
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHub'), variables('exitStream'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[concat(variables('eventHub'),'/',variables('exitStream'),'/',Variables('consumergroups_asajob_name'))]",
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "location": "[resourceGroup().location]",
      "properties": {
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDB'))]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]"

      ],
      "apiVersion": "2015-10-01",
      "name": "[variables('azureStreamAnalyticsJob1')]",
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "EventsOutOfOrderMaxDelayInSeconds": 5,
        "EventsOutOfOrderPolicy": "Adjust",
        "inputs": [
          {
            "name": "EntryStream",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "EventHubName": "[variables('entryStream')]",
                  "ServiceBusNamespace": "[variables('eventHub')]",
                  "SharedAccessPolicyKey": "[listKeys(concat('Microsoft.EventHub/namespaces/',variables('eventHub'),'/AuthorizationRules/RootManageSharedAccessKey/'),'2017-04-01').primarykey]",
                  "SharedAccessPolicyName": "RootManageSharedAccessKey",
                  "SourcePartitionCount": 4,
                  "consumerGroupName": "[variables('consumergroups_asajob_name')]"
                }
              }
            }
          },
          {
            "name": "ExitStream",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "EventHubName": "[variables('exitStream')]",
                  "ServiceBusNamespace": "[variables('eventHub')]",
                  "SharedAccessPolicyKey": "[listKeys(concat('Microsoft.EventHub/namespaces/',variables('eventHub'),'/AuthorizationRules/RootManageSharedAccessKey/'),'2017-04-01').primarykey]",
                  "SharedAccessPolicyName": "RootManageSharedAccessKey",
                  "SourcePartitionCount": 4,
                  "consumerGroupName": "[variables('consumergroups_asajob_name')]"
                }
              }
            }
          },
          {
            "name": "Regisration",
            "properties": {
              "type": "Reference",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/storageAccounts",
                "properties": {
                  "StorageAccount": "[variables('storageAccountid')]",
                  "StorageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1]",
                  "Container": "[variables('storageContainer')]",
                  "PathPattern": "[variables('registrationFileBlob')]"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "TumblingWindow",
          "properties": {
            "streamingUnits": 1,
            "query": "SELECT TollId, System.Timestamp AS WindowEnd, COUNT(*) AS Count\r\n *\r\nFROM EntryStream TIMESTAMP BY EntryTime\r\n  *\r\nGROUP BY TUMBLINGWINDOW(minute, 3), TollId\r\n"
          }
        },
        "outputs": [
          {
            "name": "CosmosDB",
            "properties": {
              "datasource": {
                "type": "Microsoft.Storage/DocumentDB",
                "properties": {
                  "AccountID": "[variables('cosmosDB')]",
                  "AccountKey": "[listKeys(concat('Microsoft.DocumentDb/databaseAccounts/',variables('cosmosDB')),'2016-03-31').primaryMasterKey]",
                  "database": "[variables('cosmosDBDatabaseName')]",
                  "CollectionNamePattern": "[variables('cosmosDBCollectionName')]",
                  "PartitionKey": "id"
                }
              }
            }
          }
        ]
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "apiVersion": "2016-09-01",
      "name": "[variables('functionAppPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "name": "[variables('functionAppPlanName')]",
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppPlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            }
          ]
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDB'))]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppPlanName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('webAppPlanSkuName')]"
      },
      "tags": {
        "displayName": "webAppPlan"
      },
      "properties": {
        "name": "[variables('webAppName')]",
        "numberOfWorkers": 1
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webAppName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppPlanName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDB'))]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHub'))]"
      ],
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('webAppName')))]": "Resource",
        "displayName": "webApp"
      },
      "properties": {
        "name": "[variables('webAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webAppName'))]",
        "siteConfig": {
          "AlwaysOn": true,
          "connectionStrings": [
            {
              "name": "AzureWebJobsDashboard",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
              "type":  3 
            },
            {
              "name": "AzureWebJobsStorage",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
              "type": 3 
            }
          ]
        }
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
          ],
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "tags": {
            "displayName": "webAppDeploy"
          },
          "properties": {
            "RepoURL": "[variables('repoURL')]",
            "branch": "[variables('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "dependsOn": [
            "[concat('Microsoft.Web/sites/',variables('webAppName'))]",
            "web"
          ],
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "appsettings",
          "properties": {
            "EntryName": "[variables('entryStream')]",
            "ExitName": "[variables('exitStream')]",
            "DocumentDbUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDB'))).documentEndpoint]",
            "DocumentDbKey": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDB')), '2015-04-08').primaryMasterKey]",
            "ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(variables('storageAccountid'),'2015-05-01-preview').key1),';EndpointSuffix=core.windows.net')]",
            "Microsoft.ServiceBus.ConnectionString": "[listKeys(concat('Microsoft.EventHub/namespaces/',variables('eventHub'),'/AuthorizationRules/RootManageSharedAccessKey/'),'2017-04-01').primaryConnectionString]",
            "TimerSetting": "[parameters('interval')]",
            "Sitename": "[variables('webAppName')]",
            "DocumentDbDatabaseName": "[variables('cosmosDBDatabaseName')]",
            "DocumentDbCollectionName": "[variables('cosmosDBCollectionName')]",
            "Container": "[variables('storageContainer')]",
            "RegistrationFileBlob": "[variables('registrationFileBlob')]",
            "WebjobName": "[variables('webJobName')]",
            "DeploymentLogLink": "[variables('deploymentLogLink')]",
            "ResourceGroup": "[resourceGroup().name]",
            "SubscriptionId": "[subscription().subscriptionId]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "webAppUrl": {
      "type": "string",
      "value": "[concat('http://', reference(resourceId('Microsoft.Web/sites/', variables('webAppName'))).hostNames[0])]"
    }
  }
}