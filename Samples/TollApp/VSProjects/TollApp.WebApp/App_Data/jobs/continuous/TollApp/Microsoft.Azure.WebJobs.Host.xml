<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.WebJobs.Host</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.AbortHostInstanceMessage">
            <summary>Represents a request to abort the host instance.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterDescriptor">
            <summary>Represents a parameter bound to an IBinder.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterLog">
            <summary>Represents a function parameter log for a runtime binder parameter.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterLog.Items">
            <summary>Gets or sets the items bound.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterLogItem">
            <summary>Represents an item bound using a runtime binder parameter.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterLogItem.Descriptor">
            <summary>Gets or sets the parameter descriptor.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterLogItem.Value">
            <summary>Gets or sets the parameter value.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BinderParameterLogItem.Log">
            <summary>
            Gets or sets the parameter log.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BindingDataParameterDescriptor">
            <summary>Represents a parameter bound to binding data.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BlobMetadataKeys">
            <summary>Provides well-known blob metadata keys.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.BlobMetadataKeys.ParentId">
            <summary>
            Gets the name of the blob metadata key used to store ID of the function instance that wrote the blob.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BlobNames">
            <summary>Provides blob names in the protocol.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.BlobNames.GetConflictFreeDateTimeBasedBlobName">
            <summary>
            Generates a blob name based on the current date/time that has no naming collision issue
            </summary>
            <returns>A blob name</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.BlobNames.GetConflictFreeDateTimeBasedBlobName(System.DateTimeOffset)">
            <summary>
            Generates a blob name based on a specified date/time that has no naming collision issue
            </summary>
            <param name="timestamp">The timestamp from which the name is generated.</param>
            <returns>A blob name</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.BlobNames.CreateDateBasedBlobName(System.DateTimeOffset)">
            <summary>
            Creates a blob name based on a specified date/time
            </summary>
            <param name="timestamp">The timestamp from which the name is generated.</param>
            <returns>A blob name</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BlobParameterDescriptor">
            <summary>Represents a parameter bound to a blob in Azure Storage.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobParameterDescriptor.ContainerName">
            <summary>Gets or sets the name of the container.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobParameterDescriptor.BlobName">
            <summary>Gets or sets the name of the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobParameterDescriptor.Access">
            <summary>Gets or sets the kind of access the parameter has to the blob.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.BlobTriggerParameterDescriptor">
            <summary>Represents a parameter triggered on a blob in Azure Storage.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobTriggerParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobTriggerParameterDescriptor.ContainerName">
            <summary>Gets or sets the name of the container.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobTriggerParameterDescriptor.BlobName">
            <summary>Gets or sets the name of the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.BlobTriggerParameterDescriptor.Access">
            <summary>Gets or sets the kind of access the parameter has to the blob.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.BlobTriggerParameterDescriptor.GetTriggerReason(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.CallAndOverrideMessage">
            <summary>Represents a message to execute a function using override values for all parameters.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.CallAndOverrideMessage.Id">
            <summary>Gets or sets the ID of this request.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.CallAndOverrideMessage.FunctionId">
            <summary>Gets or sets the ID of the function to run.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.CallAndOverrideMessage.Arguments">
            <summary>Gets or sets the arguments to the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.CallAndOverrideMessage.Reason">
            <summary>Gets or sets the reason the function executed.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.CallAndOverrideMessage.ParentId">
            <summary>Gets or sets the ID of the parent function, if any.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.CallerSuppliedParameterDescriptor">
            <summary>Represents a parameter bound to a caller-supplied value.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.CancellationTokenParameterDescriptor">
            <summary>Represents a parameter bound to a cancellation token.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.CloudStorageAccountParameterDescriptor">
            <summary>Represents a parameter bound to an Azure Storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.CloudStorageAccountParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ConsoleOutputParameterDescriptor">
            <summary>Represents a parameter bound to a <see cref="T:System.IO.TextWriter"/> for console output.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ContainerNames">
            <summary>Provides well-known container names in the protocol.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.ContainerNames.HostOutput">
            <summary>The name of the container where protocol messages from the host are stored.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.ContainerNames.HostArchive">
            <summary>
            The name of the container where protocol messages from the host are archived after processing.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ExecutionReason">
            <summary>Defines constants for reasons a function is executed.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.ExecutionReason.AutomaticTrigger">
            <summary>Indicates a function executed because of an automatic trigger.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.ExecutionReason.HostCall">
            <summary>Indicates a function executed because of a programmatic host call.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.ExecutionReason.Dashboard">
            <summary>Indicates a function executed because of a request from a dashboard user.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionCompletedMessage">
            <summary>Represents a message indicating that a function completed execution.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionCompletedMessage.EndTime">
            <summary>Gets or sets the time the function stopped executing.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionCompletedMessage.Succeeded">
            <summary>Gets a value indicating whether the function completed successfully.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionCompletedMessage.Failure">
            <summary>Gets or sets the details of the function's failure.</summary>
            <remarks>If the function succeeded, this value is <see langword="null"/>.</remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionCompletedMessage.ParameterLogs">
            <summary>Gets or sets the parameter logs.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor">
            <summary>Represents an Azure WebJobs SDK function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor.Id">
            <summary>Gets or sets the ID of the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor.FullName">
            <summary>Gets or sets the fully qualified name of the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor.ShortName">
            <summary>Gets or sets the display name of the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor.Parameters">
            <summary>Gets or sets the function's parameters.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor.Method">
            <summary>
            Gets the <see cref="T:System.Reflection.MethodInfo"/> for this function
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionFailure">
            <summary>Represents a function's execution failure information.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionFailure.ExceptionType">
            <summary>Gets or sets the name of the type of exception that occurred.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionFailure.ExceptionDetails">
            <summary>Gets or sets the details of the exception that occurred.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage">
            <summary>Represents a message indicating that a function started executing.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.FunctionInstanceIdKey">
            <summary>The name of the key used to store the function instance ID in metadata.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.FunctionInstanceId">
            <summary>Gets or sets the function instance ID.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.Function">
            <summary>Gets or sets the function executing.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.Arguments">
            <summary>Gets or sets the function's argument values.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.ParentId">
            <summary>Gets or sets the ID of the ancestor function instance.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.Reason">
            <summary>Gets or sets the reason the function executed.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.ReasonDetails">
            <summary>Gets or sets the detailed reason the function executed.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.StartTime">
            <summary>Gets or sets the time the function started executing.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.OutputBlob">
            <summary>Gets or sets the path of the blob containing console output from the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage.ParameterLogBlob">
            <summary>Gets or sets the path of the blob containing per-parameter logging data.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessageExtensions">
            <summary>Provides extension methods for the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage"/> class.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessageExtensions.FormatReason(Microsoft.Azure.WebJobs.Host.Protocols.FunctionStartedMessage)">
            <summary>Formats a function's <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.ExecutionReason"/> in a display-friendly text format.</summary>
            <param name="message">The function whose reason to format.</param>
            <returns>A function's <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.ExecutionReason"/> in a display-friendly text format.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage">
            <summary>Represents a message that reports the status of a function invocation.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.FunctionId">
            <summary>Gets or sets the ID of the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.FunctionInstanceId">
            <summary>Gets or sets the function instance ID.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.Status">
            <summary>Gets or sets the status of the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.StartTime">
            <summary>Gets or sets the time the function started executing.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.EndTime">
            <summary>Gets or sets the time the function execution completed.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.Failure">
            <summary>Gets or sets the details of the function's failure.</summary>
            <remarks>If the function succeeded, this value is <see langword="null"/>.</remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.OutputBlob">
            <summary>Gets or sets the path of the blob containing console output from the function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.FunctionStatusMessage.ParameterLogBlob">
            <summary>Gets or sets the path of the blob containing per-parameter logging data.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatCommand">
            <summary>Represents a command that signals a heartbeat from a running host instance.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatCommand.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlockBlob)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatCommand"/> class.
            </summary>
            <param name="blob">The heartbeat blob.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatCommand.BeatAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor">
            <summary>Represents the definition of a host instance heartbeat blob.</summary>
            <remarks>While it is running, the host instance periodically updates the blob's LastModified time.</remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor.SharedContainerName">
            <summary>Gets or sets the name of the heartbeat container shared by all instances of the host.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor.SharedDirectoryName">
            <summary>
            Gets or sets the name of the directory in <see cref="P:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor.SharedContainerName"/> shared by all instances of the
            host.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor.InstanceBlobName">
            <summary>
            Gets or sets the name of the blob in <see cref="P:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor.SharedDirectoryName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HeartbeatDescriptor.ExpirationInSeconds">
            <summary>
            Gets or sets the number of seconds after the blob's LastModified time during which the heartbeat is still
            valid.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.HostMessage">
            <summary>Represents a message to any instance of a host.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostMessage.Type">
            <summary>Gets or set the message type.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage">
            <summary>Represents a message from a host instance.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.MessageTypeKeyName">
            <summary>The name of the key used to store the message type in metadata.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.HostInstanceId">
            <summary>Gets or sets the host instance ID.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.HostDisplayName">
            <summary>Gets or sets a short, non-unique name for the host suitable for display purposes.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.SharedQueueName">
            <summary>
            Gets or sets the name of the shared queue to which all instances of this host listen, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.InstanceQueueName">
            <summary>
            Gets or sets the name of the shared queue to which only this host instance listens, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.Heartbeat">
            <summary>Gets or sets the heartbeat for the host instance, if any.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostOutputMessage.WebJobRunIdentifier">
            <summary>Gets or sets the ID of the web job under which the function is running, if any.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.HostStartedMessage">
            <summary>Represents a message indicating that a host instance started.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.HostStartedMessage.Functions">
            <summary>Gets or sets the functions the host instance contains.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.IHeartbeatCommand">
            <summary>Defines a command that signals a heartbeat from a running host instance.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.IHeartbeatCommand.BeatAsync(System.Threading.CancellationToken)">
            <summary>Signals a heartbeat from a running host instance.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will signal the heartbeat.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.IPersistentQueueWriter`1">
            <summary>Defines a persistent queue writer.</summary>
            <typeparam name="T">The type of messages in the queue.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.IPersistentQueueWriter`1.EnqueueAsync(`0,System.Threading.CancellationToken)">
            <summary>Adds a message to the queue.</summary>
            <param name="message">The message to enqueue.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will provide the enqueued message identifier.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.IPersistentQueueWriter`1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>Deletes a message from the queue.</summary>
            <param name="messageId">The message identifier from the message to delete.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will delete the message from the queue.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.JsonSerialization">
            <summary>Provides the standard <see cref="F:Microsoft.Azure.WebJobs.Host.Protocols.JsonSerialization.JsonSerializerSettings"/> used by protocol data.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.JsonSerialization.Settings">
            <summary>Gets the standard <see cref="F:Microsoft.Azure.WebJobs.Host.Protocols.JsonSerialization.JsonSerializerSettings"/> used by protocol data.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.JsonTypeNameAttribute">
            <summary>
            Provides a key to use in place of the .NET type name when deserializing polymorphic objects using
            <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.JsonTypeNameAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.JsonTypeNameAttribute"/> class.</summary>
            <param name="typeName">The type name to use for serialization.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.JsonTypeNameAttribute.TypeName">
            <summary>Gets the type name to use for serialization.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.LocalBlobDescriptor">
            <summary>Represents a blob in the same storage account as the entity that references it.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.LocalBlobDescriptor.ContainerName">
            <summary>Gets or sets the container name.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.LocalBlobDescriptor.BlobName">
            <summary>Gets or sets the blob name.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.NullHeartbeatCommand">
            <summary>Represents a null object implementation of <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.IHeartbeatCommand"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.NullHeartbeatCommand.BeatAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDescriptor">
            <summary>Represents a parameter to an Azure WebJobs SDK function.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDescriptor.Type">
            <summary>
            Gets or sets the parameter type. This property shouldn't be set explicitly.
            It is automatically set based on application of <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.JsonTypeNameAttribute"/>
            to derived types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDescriptor.Name">
            <summary>
            Gets or sets the parameter name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDescriptor.DisplayHints">
            <summary>
            Gets or sets the parameter display hints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDescriptor.ExtendedProperties">
            <summary>
            Dictionary of all properties that were in a deserialized
            json payload but didn't have corresponding properties on
            the deserialized type. This ensures that we don't lose any
            data provided by extension bindings.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.SingletonParameterLog">
            <summary>
            Represents a function parameter log for a virtual singleton parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.SingletonParameterLog.TimeToAcquireLock">
            <summary>
            Gets or sets the time that has been spent waiting for the lock.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.SingletonParameterLog.LockDuration">
            <summary>
            Gets or sets the total time the lock was held.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.SingletonParameterLog.LockOwner">
            <summary>
            Gets or sets the current lock owner.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.SingletonParameterLog.LockAcquired">
            <summary>
            Gets or sets a value indicating whether the lock has been acquired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.TriggerParameterDescriptor">
            <summary>
            Represents a trigger parameter to an Azure WebJobs SDK function.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.TriggerParameterDescriptor.GetTriggerReason(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets a descriptive reason for why a triggered function executed.
            This function is called by the framework when logging triggered
            function invocations.
            </summary>
            <param name="arguments">The collection of arguments for the current function invocation.</param>
            <returns>The descriptive reason string</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDisplayHints">
            <summary>
            Provides parameter details that can be used for showing the parameter
            in the WebJobs Dashboard.
            </summary>
            <remarks>
            Note: These descriptions are NOT localized - they will only be used in
            the English Dashboard. However, currently the Dashboard itself is not
            localized.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDisplayHints.Description">
            <summary>
            Gets or sets the parameter description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDisplayHints.Prompt">
            <summary>
            Gets or sets the prompt that will be shown next to the
            user input control.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDisplayHints.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ParameterLog">
            <summary>Represents a function parameter log.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ParameterLog.Type">
            <summary>Gets or sets the log type.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueMessage">
            <summary>Represents a message in a persistent queue.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueMessage.Type">
            <summary>Gets or sets the message type.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueMessage.Blob">
            <summary>Gets or sets the blob object.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueMessage.BlobText">
            <summary>Gets or sets the blob text.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueMessage.EnqueuedOn">
            <summary>Gets or sets the time the message was enqueued.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueMessage.PopReceipt">
            <summary>Gets or sets a receipt from dequeueing the message.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1">
            <summary>Represents a persistent queue writer.</summary>
            <typeparam name="T">The type of messages in the queue.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1"/> class.</summary>
            <param name="client">
            A blob client for the storage account into which host output messages are written.
            </param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1"/> class.</summary>
            <param name="container">The container into which host output messages are written.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1.EnqueueAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PersistentQueueWriter`1.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter">
            <remarks>
            Unlike $type in JSON.NET, this converter decouples the message data from the .NET class and assembly names.
            It also allows emitting a type on the root object.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.#ctor(System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter"/> class.</summary>
            <param name="typeMapping">The type names to use when serializing types.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter"/> class.</summary>
            <param name="typePropertyName">The name of the property in which to serialize the type name.</param>
            <param name="typeMapping">The type names to use when serializing types.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.TypePropertyName">
            <summary>Gets the name of the property in which to serialize the type name.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.PolymorphicJsonConverter.GetTypeMapping``1">
            <summary>Gets all type name mappings in a type hierarchy.</summary>
            <typeparam name="T">The root type of the type hierarchy.</typeparam>
            <returns>All type name mappings in the type hierarchy.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.QueueParameterDescriptor">
            <summary>Represents a parameter bound to a queue in Azure Storage.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.QueueParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.QueueParameterDescriptor.QueueName">
            <summary>Gets or sets the name of the queue.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.QueueParameterDescriptor.Access">
            <summary>Gets or sets the kind of access the parameter has to the queue.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.QueueTriggerParameterDescriptor">
            <summary>Represents a parameter triggered on a queue in Azure Storage.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.QueueTriggerParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.QueueTriggerParameterDescriptor.QueueName">
            <summary>Gets or sets the name of the queue.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.QueueTriggerParameterDescriptor.GetTriggerReason(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ReadBlobParameterLog">
            <summary>Represents a function parameter log for a read-only blob parameter.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ReadBlobParameterLog.BytesRead">
            <summary>Gets or sets the number of bytes read.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ReadBlobParameterLog.Length">
            <summary>Gets or sets the total number of bytes available to read.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ReadBlobParameterLog.ElapsedTime">
            <summary>Gets or sets the approximate amount of time spent performing I/O.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusParameterDescriptor">
            <summary>
            Represents a parameter bound to an Azure Service Bus entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusParameterDescriptor.NamespaceName">
            <summary>Gets or sets the name of the Service Bus namespace.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusParameterDescriptor.QueueOrTopicName">
            <summary>Gets or sets the name of the queue or topic.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor">
            <summary>
            Represents a parameter bound to an Azure Service Bus entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor.NamespaceName">
            <summary>Gets or sets the name of the Service Bus namespace.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor.QueueName">
            <summary>Gets or sets the name of the queue.</summary>
            <remarks>When binding to a subscription in a topic, returns <see langword="null"/>.</remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor.TopicName">
            <summary>Gets or sets the name of the queue.</summary>
            <remarks>When binding to a queue, returns <see langword="null"/>.</remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor.SubscriptionName">
            <summary>Gets or sets the name of the subscription in <see cref="P:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor.TopicName"/>.</summary>
            <remarks>When binding to a queue, returns <see langword="null"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.ServiceBusTriggerParameterDescriptor.GetTriggerReason(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.TableEntityParameterDescriptor">
            <summary>Represents a parameter bound to a table entity in Azure Storage.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableEntityParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableEntityParameterDescriptor.TableName">
            <summary>Gets or sets the name of the table.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableEntityParameterDescriptor.PartitionKey">
            <summary>Gets or sets the partition key of the entity.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableEntityParameterDescriptor.RowKey">
            <summary>Gets or sets the row key of the entity.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterDescriptor">
            <summary>Represents a parameter bound to a table in Azure Storage.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterDescriptor.AccountName">
            <summary>Gets or sets the name of the storage account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterDescriptor.TableName">
            <summary>Gets or sets the name of the table.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterDescriptor.Access">
            <summary>Gets or sets the kind of access the parameter has to the table.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterLog">
            <summary>Represents a function parameter log for a table parameter.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterLog.EntitiesWritten">
            <summary>Gets or sets the number of entities inserted or replaced.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterLog.EntitiesUpdated">
            <summary>Gets or sets the number of entities updated.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TableParameterLog.ElapsedWriteTime">
            <summary>Gets or sets the approximate amount of time spent performing write I/O.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.TextParameterLog">
            <summary>Represents a function parameter log stored as text.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.TextParameterLog.Value">
            <summary>Gets or sets the log contents.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier">
            <summary>Represents an identifier for a WebJob.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier"/> class.</summary>
            <remarks>This constructor is only intended for serialization support.</remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.#ctor(Microsoft.Azure.WebJobs.Host.Protocols.WebJobTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier"/> class with the values provided.
            </summary>
            <param name="jobType">The job type.</param>
            <param name="jobName">The job name.</param>
            <param name="runId">The job run ID.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.#ctor(System.String,Microsoft.Azure.WebJobs.Host.Protocols.WebJobTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier"/> class with the values provided.
            </summary>
            <param name="websiteName">The website name.</param>
            <param name="jobType">The job type.</param>
            <param name="jobName">The job name.</param>
            <param name="runId">The job run ID.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.WebSiteName">
            <summary>Gets or sets the website name.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.JobType">
            <summary>Gets or sets the WebJob type.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.JobName">
            <summary>Gets or sets the job name.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.RunId">
            <summary>Gets or sets the job run ID.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.Current">
            <summary>Gets an identifier for the current web job run, if any.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Protocols.WebJobRunIdentifier.GetKey">
            <summary>Gets a key containing the full web job identifier.</summary>
            <returns>A key containing the full web job identifier.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.WebJobTypes">
            <summary>Represents the WebJob type.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebJobTypes.Triggered">
            <summary>The WebJob runs when triggered.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebJobTypes.Continuous">
            <summary>The WebJob runs continuously.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.WebSitesKnownKeyNames">
            <summary>Defines well-known environment variable names for Azure Web Sites data.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebSitesKnownKeyNames.WebSiteNameKey">
            <summary>An environment variable containing the Web Site name.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebSitesKnownKeyNames.JobDataPath">
            <summary>An environment variable containing the path to WebJobs data.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebSitesKnownKeyNames.JobNameKey">
            <summary>An environment variable containing the WebJobs name.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebSitesKnownKeyNames.JobTypeKey">
            <summary>An environment variable containing the WebJobs type.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Protocols.WebSitesKnownKeyNames.JobRunIdKey">
            <summary>An environment variable containing the WebJobs run ID.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Protocols.WriteBlobParameterLog">
            <summary>Represents a function parameter log for a write-only blob parameter.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WriteBlobParameterLog.WasWritten">
            <summary>Gets or sets a value indicating whether the blob was written at all.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Protocols.WriteBlobParameterLog.BytesWritten">
            <summary>When the blob was written, gets or sets the number of bytes written.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageAppendBlob">
            <summary>Defines an append blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageAppendBlob.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Uploads text contents to the blob.</summary>
            <param name="content">The text to upload.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="accessCondition">The condition that must be met for the request to succeed.</param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will upload text contents to the blob.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob">
            <summary>Defines a blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.BlobType">
            <summary>Gets the type of the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.Container">
            <summary>Gets the container for the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.Metadata">
            <summary>Gets the user-defined metadata for the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.Name">
            <summary>Gets the name of the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.Properties">
            <summary>Gets the blob's system properties.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <summary>Acquires a lease for the blob.</summary>
            <param name="leaseTime">The length of the lease.</param>
            <param name="proposedLeaseId">The proposed ID for the lease.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will acquire a lease for the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.DeleteAsync(System.Threading.CancellationToken)">
            <summary>Deletes the blob.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will delete the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.ExistsAsync(System.Threading.CancellationToken)">
            <summary>Determines whether the blob exists.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will determine whether the blob exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.FetchAttributesAsync(System.Threading.CancellationToken)">
            <summary>Populates the blob's properties and metadata.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will populate the blob's properties and metadata.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.OpenReadAsync(System.Threading.CancellationToken)">
            <summary>Opens a stream to read from the blob.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will open a stream to read from the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Releases a lease on the blob.</summary>
            <param name="accessCondition">
            The condition containing the current lease ID that must be met for the request to succeed.
            </param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will release a lease on the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Renews the lease on the blob.</summary>
            <param name="accessCondition">
            The condition containing the current lease ID that must be met for the request to succeed.
            </param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will renew the lease on the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Updates the blob's metadata.</summary>
            <param name="accessCondition">The condition that must be met for the request to succeed.</param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will update the blob's metadata.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient">
            <summary>Defines a blob client.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient.Credentials">
            <summary>Gets the credentials used to connect to the account.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient.GetContainerReference(System.String)">
            <summary>Gets a container reference.</summary>
            <param name="containerName">The container name.</param>
            <returns>A container reference.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient.GetServicePropertiesAsync(System.Threading.CancellationToken)">
            <summary>Gets the service's properties.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will retrieve the service's properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Gets a segment of blobs in a container.</summary>
            <param name="prefix">The blob name prefix.</param>
            <param name="useFlatBlobListing">
            Whether to use a flat listing rather than a hierarchical one by virtual directory.
            </param>
            <param name="blobListingDetails">The details to include in the listing.</param>
            <param name="maxResults">A limit on the number of results to be returned.</param>
            <param name="currentToken">A continuation token indicating where to resume listing.</param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will get a segment of blobs in a container.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient.SetServicePropertiesAsync(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties,System.Threading.CancellationToken)">
            <summary>Sets the service's properties.</summary>
            <param name="properties">The service properties to set.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will retrieve the service's properties.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer">
            <summary>Defines a blob container.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.Name">
            <summary>Gets the name of the container.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer"/>.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.ServiceClient">
            <summary>Gets the blob service client.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.Uri">
            <summary>Gets the URI of the container's primary location.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <summary>Creates the container if it does not already exist.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will create the container if it does not already exist.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.ExistsAsync(System.Threading.CancellationToken)">
            <summary>Determines whether the container exists.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will determine whether the container exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>Gets a blob reference from the server.</summary>
            <param name="blobName">The blob name.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will get a blob reference from the server.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.GetBlockBlobReference(System.String)">
            <summary>Gets a block blob reference.</summary>
            <param name="blobName">The blob name.</param>
            <returns>A block blob reference.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.GetDirectoryReference(System.String)">
            <summary>Gets a reference to a virtual directory beneath this container.</summary>
            <param name="relativeAddress">The address of the directory.</param>
            <returns>A reference to a virtual directory beneath this container.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.GetPageBlobReference(System.String)">
            <summary>Gets a page blob reference.</summary>
            <param name="blobName">The blob name.</param>
            <returns>A page blob reference.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.GetAppendBlobReference(System.String)">
            <summary>Gets an append blob reference.</summary>
            <param name="blobName">The blob name.</param>
            <returns>An append blob reference.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Gets a segment of blobs in the container.</summary>
            <param name="prefix">The blob name prefix.</param>
            <param name="useFlatBlobListing">
            Whether to use a flat listing rather than a hierarchical one by virtual directory.
            </param>
            <param name="blobListingDetails">The details to include in the listing.</param>
            <param name="maxResults">A limit on the number of results to be returned.</param>
            <param name="currentToken">A continuation token indicating where to resume listing.</param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will get a segment of blobs in the container.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobDirectory">
            <summary>Defines a blob directory.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobDirectory.Container">
            <summary>Gets the container for the blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobDirectory.ServiceClient">
            <summary>Gets the blob service client.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobDirectory.GetBlockBlobReference(System.String)">
            <summary>Gets a block blob reference.</summary>
            <param name="blobName">The blob name.</param>
            <returns>A block blob reference.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobProperties">
            <summary>Defines the system properties of a blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobProperties.ETag">
            <summary>
            Gets the ETag of the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobProperties.LastModified">
            <summary>
            Gets the last time the blob was modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobProperties.LeaseState">
            <summary>
            Gets the LeaseState of the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobProperties.LeaseStatus">
            <summary>
            Gets the LeaseStatus of the blob.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobResultSegment">
            <summary>Defines a segment of blob list results.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobResultSegment.ContinuationToken">
            <summary>Gets the continuation token to use to retrieve the next segment of results.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobResultSegment.Results">
            <summary>Gets the results in this segment.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlockBlob">
            <summary>Defines a block blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlockBlob.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlockBlob.DownloadTextAsync(System.Threading.CancellationToken)">
            <summary>Downloads text contents from the blob.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will download text contents from the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlockBlob.OpenWriteAsync(System.Threading.CancellationToken)">
            <summary>Opens a stream to write to the blob.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will open a stream to write to the blob.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Uploads text contents to the blob.</summary>
            <param name="content">The text to upload.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="accessCondition">The condition that must be met for the request to succeed.</param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will upload text contents to the blob.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageListBlobItem">
            <summary>Defines an item returned from a blob listing operation.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStoragePageBlob">
            <summary>Defines a page blob.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStoragePageBlob.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.IStoragePageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>Opens a stream to write to the blob.</summary>
            <param name="size">The size of the page blob, in bytes (must be a multiple of 512).</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will open a stream to write to the blob.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob">
            <summary>Represents an append blob.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob"/> class.</summary>
            <param name="parent">The parent blob container.</param>
            <param name="sdk">The SDK blob to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.BlobType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.Container">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.Metadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.Microsoft#Azure#WebJobs#Host#Storage#Blob#IStorageBlob#SdkObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.SdkObject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.ExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.FetchAttributesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.OpenReadAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient">
            <summary>Represents a blob client.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient.#ctor(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient"/> class.</summary>
            <param name="sdk">The SDK client to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient.Credentials">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient.GetContainerReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient.GetServicePropertiesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobClient.SetServicePropertiesAsync(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer">
            <summary>Represents a blob container.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobClient,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer"/> class.</summary>
            <param name="parent">The parent blob client.</param>
            <param name="sdk">The SDK container to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.SdkObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.ServiceClient">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.Uri">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.ExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.GetBlockBlobReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.GetDirectoryReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.GetPageBlobReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.GetAppendBlobReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobDirectory">
            <summary>Represents a blob directory.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobDirectory.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobDirectory"/> class.</summary>
            <param name="parent">The parent blob container.</param>
            <param name="sdk">The SDK directory to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobDirectory.Container">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobDirectory.ServiceClient">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobDirectory.GetBlockBlobReference(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties">
            <summary>Represents the system properties of a blob.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties.#ctor(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties"/> class.</summary>
            <param name="sdk">The SDK blob whose properties to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties.ETag">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties.LastModified">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties.LeaseState">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobProperties.LeaseStatus">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobResultSegment">
            <summary>Represents a segment of blob list results.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobResultSegment.#ctor(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageListBlobItem})">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobResultSegment"/> class.</summary>
            <param name="continuationToken">The continuation token.</param>
            <param name="results">The results in the segment.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobResultSegment.ContinuationToken">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobResultSegment.Results">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobType">
            <summary>Defines blob types.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobType.BlockBlob">
            <summary>A block blob.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobType.PageBlob">
            <summary>A page blob.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlobType.AppendBlob">
            <summary>An append blob.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob">
            <summary>Represents a block blob.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob"/> class.</summary>
            <param name="parent">The parent blob container.</param>
            <param name="sdk">The SDK blob to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.BlobType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.Container">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.Metadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.Microsoft#Azure#WebJobs#Host#Storage#Blob#IStorageBlob#SdkObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.SdkObject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.DownloadTextAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.ExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.FetchAttributesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.OpenReadAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.OpenWriteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StorageBlockBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob">
            <summary>Represents a page blob.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob"/> class.</summary>
            <param name="parent">The parent blob container.</param>
            <param name="sdk">The SDK blob to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.BlobType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.Container">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.Metadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.Microsoft#Azure#WebJobs#Host#Storage#Blob#IStorageBlob#SdkObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.SdkObject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.DeleteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.ExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.FetchAttributesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.OpenReadAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.OpenWriteAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Blob.StoragePageBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue">
            <summary>Defines a queue.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.Name">
            <summary>Gets the name of the queue.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/>.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.ServiceClient">
            <summary>Gets the queue service client.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.AddMessageAsync(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage,System.Threading.CancellationToken)">
            <summary>Adds a message to the queue.</summary>
            <param name="message">The message to enqueue.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <remarks>A task that will add the message to the queue.</remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <summary>Creates the queue if it does not already exist.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will create the queue if it does not already exist.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.CreateMessage(System.Byte[])">
            <summary>Creates a new queue message.</summary>
            <param name="content">The message content.</param>
            <returns>A new queue message</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.CreateMessage(System.String)">
            <summary>Creates a new queue message.</summary>
            <param name="content">The message content.</param>
            <returns>A new queue message</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.DeleteMessageAsync(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage,System.Threading.CancellationToken)">
            <summary>Deletes a message.</summary>
            <param name="message">The message to delete.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will delete the message.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.ExistsAsync(System.Threading.CancellationToken)">
            <summary>Determines whether the queue exists.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will determine whether the queue exists.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <summary>Gets messages from the queue and marks them invisible during the visibility timeout.</summary>
            <param name="messageCount">The number of messages to retrieve.</param>
            <param name="visibilityTimeout">The visibility timeout.</param>
            <param name="options">The options for the request.</param>
            <param name="operationContext">The operation context for the request.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>
            A task that will get messages from the queue and marks them invisible during the visibility timeout.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueue.UpdateMessageAsync(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)">
            <summary>Updates the visibility timeout and optionally the content of a message.</summary>
            <param name="message">The message to update.</param>
            <param name="visibilityTimeout">The visibility timeout.</param>
            <param name="updateFields">
            <see cref="T:Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields"/> flags specifying which parts of the message to update.
            </param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will update the message.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueClient">
            <summary>Defines a queue client.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueClient.Credentials">
            <summary>Gets the credentials used to connect to the account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueClient.SdkObject">
            <summary>Gets the underlying SDK client.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueClient.GetQueueReference(System.String)">
            <summary>Gets a queue reference.</summary>
            <param name="queueName">The queue name.</param>
            <returns>A queue reference.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage">
            <summary>Defines a queue message.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.AsBytes">
            <summary>Get the message contents as a byte array.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.AsString">
            <summary>Gets the message contents as text.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.DequeueCount">
            <summary>Gets the number of times the message has been dequeued.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.ExpirationTime">
            <summary>Gets the time at which the message expires.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.Id">
            <summary>Gets the message ID.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.InsertionTime">
            <summary>Gets the time at which the message was added to the queue.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.NextVisibleTime">
            <summary>Gets the next time at which the message will be visible.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.PopReceipt">
            <summary>Gets the pop receipt for the message.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage.SdkObject">
            <summary>Gets the underlying SDK queue message.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue">
            <summary>Represents a queue.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.#ctor(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueClient,Microsoft.WindowsAzure.Storage.Queue.CloudQueue)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue"/> class.</summary>
            <param name="parent">The parent queue client.</param>
            <param name="sdk">The SDK queue to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.SdkObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.ServiceClient">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.AddMessageAsync(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.CreateMessage(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.CreateMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.DeleteMessageAsync(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.ExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueue.UpdateMessageAsync(Microsoft.Azure.WebJobs.Host.Storage.Queue.IStorageQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueClient">
            <summary>Represents a queue client.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueClient.#ctor(Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueClient"/> class.</summary>
            <param name="sdk">The SDK client to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueClient.Credentials">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueClient.SdkObject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueClient.GetQueueReference(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage">
            <summary>Represents a queue message.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.#ctor(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage"/> class.</summary>
            <param name="message">The SDK message to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.AsBytes">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.AsString">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.DequeueCount">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.ExpirationTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.InsertionTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.NextVisibleTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.PopReceipt">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Queue.StorageQueueMessage.SdkObject">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions">
            <summary>Provides extension methods for the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsBadRequestPopReceiptMismatch(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 400 Bad Request error with the error code PopReceiptMismatch.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 400 Bad Request error with the error code
            PopReceiptMismatch; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflict(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>Determines whether the exception is due to a 409 Conflict error.</summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflictBlobAlreadyExists(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 409 Conflict error with the error code BlobAlreadyExists.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error with the error code
            BlobAlreadyExists; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflictLeaseAlreadyPresent(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 409 Conflict error with the error code LeaseAlreadyPresent.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error with the error code
            LeaseAlreadyPresent; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflictLeaseIdMismatchWithLeaseOperation(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 409 Conflict error with the error code
            LeaseIdMismatchWithLeaseOperation.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error with the error code
            LeaseIdMismatchWithLeaseOperation; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflictQueueBeingDeleted(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 409 Conflict error with the error code QueueBeingDeleted.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error with the error code
            QueueBeingDeleted; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflictQueueBeingDeletedOrDisabled(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 409 Conflict error with the error code QueueBeingDeleted or
            QueueDisabled.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error with the error code QueueBeingDeleted
            or QueueDisabled; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsConflictQueueDisabled(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 409 Conflict error with the error code QueueDisabled.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 409 Conflict error with the error code QueueDisabled;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>Determines whether the exception is due to a 404 Not Found error.</summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundBlobNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code BlobNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code BlobNotFound;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundContainerNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code ContainerNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code
            ContainerNotFound; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundTableNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code TableNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code
            TableNotFound; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundBlobOrContainerNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code BlobNotFound or
            ContainerNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code BlobNotFound or
            ContainerNotFound; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundMessageOrQueueNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code MessageNotFound or
            QueueNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code MessageNotFound
            or QueueNotFound; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundMessageNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code MessageNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code MessageNotFound;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsNotFoundQueueNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 404 Not Found error with the error code QueueNotFound.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 404 Not Found error with the error code QueueNotFound;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsOk(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>Determines whether the exception occurred despite a 200 OK response.</summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception occurred despite a 200 OK response; otherwise
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsPreconditionFailed(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>Determines whether the exception is due to a 412 Precondition Failed error.</summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 412 Precondition Failed error; otherwise
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsPreconditionFailedConditionNotMet(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 412 Precondition Failed error with the error code
            ConditionNotMet.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 412 Precondition Failed error with the error code
            ConditionNotMet; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsPreconditionFailedLeaseIdMissing(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 412 Precondition Failed error with the error code
            LeaseIdMissing.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 412 Precondition Failed error with the error code
            LeaseIdMissing; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.IsPreconditionFailedLeaseLost(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Determines whether the exception is due to a 412 Precondition Failed error with the error code LeaseLost.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>
            <see langword="true"/> if the exception is due to a 412 Precondition Failed error with the error code
            LeaseLost; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.TryGetStatusCode(Microsoft.WindowsAzure.Storage.StorageException,System.Int32@)">
            <summary>
            Returns the status code from the storage exception, or null.
            </summary>
            <param name="exception">The storage exception.</param>
            <param name="statusCode">When this method returns, contains the status code.</param>
            <returns>Returns true if there was a status code; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageExceptionExtensions.GetErrorCode(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Returns the error code from storage exception, or null.
            </summary>
            <param name="exception">The storage exception.</param>
            <returns>The error code, or null.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.IEntityResolver">
            <summary>Defines an entity resolver.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IEntityResolver.EntityType">
            <summary>Gets the type of entity returned by <see cref="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IEntityResolver.Resolve(System.String,System.String,System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},System.String)"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IEntityResolver.Resolve(System.String,System.String,System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},System.String)">
            <summary>Resolves an entity.</summary>
            <param name="partitionKey">The partition key of the entity.</param>
            <param name="rowKey">The row key of the entity.</param>
            <param name="timestamp">The timestamp of the entity.</param>
            <param name="properties">The properties of the entity.</param>
            <param name="eTag">The ETag of the entity.</param>
            <returns>The entity resolved.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable">
            <summary>Defines a table.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.Name">
            <summary>Gets the name of the table.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Table.CloudTable"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateBatch">
            <summary>Creates a batch operation.</summary>
            <returns>A new batch operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <summary>Creates the table if it does not already exist.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will create the table if it does not already exist.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateInsertOperation(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <summary>Creates an operation to insert an entity.</summary>
            <param name="entity">The entity to insert.</param>
            <returns>An operation to insert an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateInsertOrReplaceOperation(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <summary>Creates an operation to insert or replace an entity.</summary>
            <param name="entity">The entity to insert or replace.</param>
            <returns>An operation to insert or replace an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateQuery``1">
            <summary>Creates a LINQ query.</summary>
            <typeparam name="TElement">The type of entity to query.</typeparam>
            <returns>A LINQ query.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateReplaceOperation(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <summary>Creates an operation to replace an entity.</summary>
            <param name="entity">The entity to replace.</param>
            <returns>An operation to replace an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.CreateRetrieveOperation``1(System.String,System.String)">
            <summary>Creates an operation to retrieve an entity.</summary>
            <typeparam name="TElement">The type of entity to retrieve.</typeparam>
            <param name="partitionKey">The partition key of the entity to retrieve.</param>
            <param name="rowKey">The row key of the entity to retrieve.</param>
            <returns>An operation to retrieve an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.ExecuteAsync(Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation,System.Threading.CancellationToken)">
            <summary>Executes an operation.</summary>
            <param name="operation">The operation to execute.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will execute an operation and return the result.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.ExecuteBatchAsync(Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableBatchOperation,System.Threading.CancellationToken)">
            <summary>Executes an atomic batch operation.</summary>
            <param name="batch">The batch operation to execute.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will execute an atomic batch operation and return the results.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTable.ExistsAsync(System.Threading.CancellationToken)">
            <summary>Determines whether the table exists.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A task that will determine whether the table exists.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableBatchOperation">
            <summary>Defines an atomic batch operation on a table.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableBatchOperation.Add(Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation)">
            <summary>Adds an operation to the batch.</summary>
            <param name="operation">The operation to add.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableClient">
            <summary>Defines a table client.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableClient.Credentials">
            <summary>Gets the credentials used to connect to the account.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableClient.GetTableReference(System.String)">
            <summary>Gets a table reference.</summary>
            <param name="tableName">The table name.</param>
            <returns>A table reference.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation">
            <summary>Defines an operation on a table.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.OperationType">
            <summary>Gets the type of operation to perform.</summary>
            <remarks>
            When <see cref="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.OperationType"/> is <see cref="F:Microsoft.WindowsAzure.Storage.Table.TableOperationType.Retrieve"/>, returns
            <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.Entity">
            <summary>Gets the entity on which to operate.</summary>
            <remarks>
            When <see cref="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.OperationType"/> is <see cref="F:Microsoft.WindowsAzure.Storage.Table.TableOperationType.Retrieve"/>, returns
            <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.RetrievePartitionKey">
            <summary>Gets the partition key of the entity to retrieve.</summary>
            <remarks>
            When <see cref="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.OperationType"/> is not <see cref="F:Microsoft.WindowsAzure.Storage.Table.TableOperationType.Retrieve"/>, returns
            <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.RetrieveRowKey">
            <summary>Gets the row key of the entity to retrieve.</summary>
            <remarks>
            When <see cref="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.OperationType"/> is not <see cref="F:Microsoft.WindowsAzure.Storage.Table.TableOperationType.Retrieve"/>, returns
            <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.RetrieveEntityResolver">
            <summary>Gets the resolver to resolve the entity to retrieve.</summary>
            <remarks>
            When <see cref="P:Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation.OperationType"/> is not <see cref="F:Microsoft.WindowsAzure.Storage.Table.TableOperationType.Retrieve"/>, returns
            <see langword="null"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable">
            <summary>Represents a table.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.#ctor(Microsoft.WindowsAzure.Storage.Table.CloudTable)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable"/> class.</summary>
            <param name="sdk">The SDK table to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.SdkObject">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateBatch">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateInsertOperation(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateInsertOrReplaceOperation(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateQuery``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateReplaceOperation(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.CreateRetrieveOperation``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.ExecuteAsync(Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.ExecuteBatchAsync(Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableBatchOperation,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTable.ExistsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation">
            <summary>Represents an atomic batch operation on a table.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.#ctor(Microsoft.WindowsAzure.Storage.Table.TableBatchOperation)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation"/> class.</summary>
            <param name="sdk">The SDK batch operation to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Table.TableBatchOperation"/>.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableBatchOperation.Add(Microsoft.Azure.WebJobs.Host.Storage.Table.IStorageTableOperation)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableClient">
            <summary>Represents a table client.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableClient.#ctor(Microsoft.WindowsAzure.Storage.Table.CloudTableClient)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableClient"/> class.</summary>
            <param name="sdk">The SDK client to wrap.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableClient.Credentials">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableClient.GetTableReference(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation">
            <summary>Represents an operation on a table.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.OperationType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.Entity">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.RetrievePartitionKey">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.RetrieveRowKey">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.RetrieveEntityResolver">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.Table.TableOperation"/>.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.Insert(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <summary>Creates an operation to insert an entity.</summary>
            <param name="entity">The entity to insert.</param>
            <returns>An operation to insert an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.InsertOrReplace(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <summary>Creates an operation to insert or replace an entity.</summary>
            <param name="entity">The entity to insert or replace.</param>
            <returns>An operation to insert or replace an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.Replace(Microsoft.WindowsAzure.Storage.Table.ITableEntity)">
            <summary>Creates an operation to replace an entity.</summary>
            <param name="entity">The entity to replace.</param>
            <returns>An operation to replace an entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.Table.StorageTableOperation.Retrieve``1(System.String,System.String)">
            <summary>Creates an operation to retrieve an entity.</summary>
            <typeparam name="TElement">The type of entity to retrieve.</typeparam>
            <param name="partitionKey">The partition key of the entity to retrieve.</param>
            <param name="rowKey">The row key of the entity to retrieve.</param>
            <returns>An operation to retrieve an entity.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount">
            <summary>
            Defines a storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.BlobEndpoint">
            <summary>Gets the primary endpoint for the blob service.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.Credentials">
            <summary>Gets the credentials used to connect to the account.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.SdkObject">
            <summary>Gets the underlying <see cref="T:Microsoft.WindowsAzure.Storage.CloudStorageAccount"/>.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.Type">
            <summary>Gets the type of the storage account.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.CreateBlobClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <summary>Creates a blob client.</summary>
            <returns>A blob client.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.CreateQueueClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <summary>Creates a queue client.</summary>
            <returns>A queue client.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.CreateTableClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <summary>Creates a table client.</summary>
            <returns>A table client.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.IStorageAccount.ToString(System.Boolean)">
            <summary>Gets the connection string for the storage account.</summary>
            <param name="exportSecrets">
            <see langword="true"/> to include credentials in the connection string; otherwise, <see langword="false"/>.
            </param>
            <returns>The connection string for the storage account.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount"/> class.
            </summary>
            <param name="sdkAccount">The underlying SDK cloud storage account.</param>
            <param name="services">The <see cref="T:System.IServiceProvider"/> to use.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.BlobEndpoint">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.Credentials">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.SdkObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.Type">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.CreateBlobClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.CreateQueueClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.CreateTableClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount.ToString(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.AzureStorageDeploymentValidator">
            <summary>
            This helper addresses an issue in Azure Storage SDK where if certain assemblies are missing
            the Storage SDK actually continues to work overall, but some features will silently fail.
            This directly affects our StorageExceptionExtensions which rely on ExtendedErrorInfo being correctly
            populated always. However, when certain assemblies are missing, ExtendedErrorInfo will be null.
            See related issues:
            <see href="https://github.com/Azure/azure-webjobs-sdk/issues/922"/>
            <see href="https://github.com/Azure/azure-storage-net/issues/271"/> 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext">
            <summary>
            Context for runtime bindings performed via <see cref="T:Microsoft.Azure.WebJobs.IBinder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext.#ctor(Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="functionContext">The <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext"/>.</param>
            <param name="bindingData">The binding data.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext.FunctionContext">
            <summary>
            The function context.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext.FunctionInstanceId">
            <summary>
            The instance ID of the function being bound to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext.FunctionCancellationToken">
            <summary>
            Gets the function <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext.Trace">
            <summary>
            Gets the output <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.AmbientBindingContext.BindingData">
            <summary>
            Gets the binding data.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory">
            <summary>
            Helper class for creating some generally useful BindingProviders
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.#ctor(Microsoft.Azure.WebJobs.INameResolver,Microsoft.Azure.WebJobs.IConverterManager)">
            <summary>
            Constructor. 
            </summary>
            <param name="nameResolver">Name Resolver object for resolving %% tokens in a string.</param>
            <param name="converterManager">Converter Manager object for resolving {} tokens in a string. </param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.NameResolver">
            <summary>
            Get the name resolver for resolving %% tokens. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.ConverterManager">
            <summary>
            Get the converter manager for coercing types. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.AddFilter``1(System.Func{``0,System.Type,System.Boolean},Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider)">
            <summary>
            Creating a type filter predicate around another binding provider. Filter doubles as a validator if it throws.  
            </summary>
            <param name="predicate">A predication function to determine whether to use the corresponding inner provider. 
            The predicate is called once at indexing time and passed a non-resolved attribute. If it returns true, the inner provider is used to bind this parameter. It can throw an exception to signal an indexing error. </param>
            <param name="innerProvider">Inner provider to use if the predicate returns true.</param>
            <returns>A new binding provider that wraps the existing provider with a predicate.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.AddFilter(System.Func{System.Type,System.Boolean},Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider)">
            <summary>
            Creating a type filter predicate around another binding provider. 
            </summary>
            <param name="predicate">type predicate. Only apply inner provider if this predicate as applied to the user parameter type is true. </param>
            <param name="innerProvider">Inner provider to use if the predicate returns true.</param>
            <returns>A new binding provider that wraps the existing provider with a predicate.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.AddValidator``1(System.Action{``0,System.Type},Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider)">
            <summary>
            Creating a validation predicate around another binding provider. 
            The predicate is only run if the inner binding is applied. 
            </summary>
            <param name="validator">a validator function to invoke on the attribute during indexing. This is called at most once, 
            and only if the inner provider returns a binding. </param>
            <param name="innerProvider">Inner provider. This is always run.  </param>
            <returns>A new binding provider that wraps the existing provider with a validator.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.BindToGenericValueProvider``1(System.Func{``0,System.Type,System.Threading.Tasks.Task{Microsoft.Azure.WebJobs.Host.Bindings.IValueBinder}})">
            <summary>
            Create a binding provider that returns an IValueBinder from a resolved attribute. IValueBinder will let you have an OnCompleted hook that 
            is invoked after the user function completes. 
            </summary>
            <typeparam name="TAttribute">Type of binding attribute on the user's parameter.</typeparam>
            <param name="builder">Builder function to create a IValueBinder given a resolved attribute and the user parameter type. </param>
            <returns>A binding provider that applies these semantics.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.BindToCollector``2(System.Func{``0,Microsoft.Azure.WebJobs.IAsyncCollector{``1}})">
            <summary>
            Create a binding provider for binding a parameter to an <see cref="T:Microsoft.Azure.WebJobs.IAsyncCollector`1"/>. 
            Use the <see cref="T:Microsoft.Azure.WebJobs.IConverterManager"/> to convert form the user's parameter type to the TMessage type. 
            </summary>
            <typeparam name="TAttribute">Type of binding attribute on the user's parameter.</typeparam>
            <typeparam name="TMessage">element type of the IAsyncCollector.</typeparam>
            <param name="buildFromAttribute">Function to allocate the collector object given a resolved instance of the attribute.</param>
            <returns>A binding provider that applies these semantics.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.BindToCollector``2(Microsoft.Azure.WebJobs.IConverter{``0,Microsoft.Azure.WebJobs.IAsyncCollector{``1}})">
            <summary>
            Create a binding provider for binding a parameter to an <see cref="T:Microsoft.Azure.WebJobs.IAsyncCollector`1"/>. 
            </summary>
            <typeparam name="TAttribute">Type of binding attribute on the user's parameter.</typeparam>
            <typeparam name="TType">'core type' for the IAsyncCollector. This can be an OpenType and allow resolving against generics.</typeparam>
            <param name="builderInstance">builder object that converts from the attribute to an AsyncCollector. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.BindToCollector``2(System.Type,System.Object[])">
            <summary>
            Create a binding provider for binding a parameter to an <see cref="T:Microsoft.Azure.WebJobs.IAsyncCollector`1"/>. 
            </summary>
            <typeparam name="TAttribute">Type of binding attribute on the user's parameter.</typeparam>
            <typeparam name="TType">'core type' for the IAsyncCollector. This can be an OpenType and allow resolving against generics.</typeparam>
            <param name="builderType">
            Type of the builder object. Should expose a conversion from TAttribute to <see cref="T:Microsoft.Azure.WebJobs.IAsyncCollector`1"/>
            </param>
            <param name="constructorArgs">Arguments to pass to the constructor for the builderType.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.BindToInput``2(System.Type,System.Object[])">
            <summary>
            General rule for binding to an generic input type for a given attribute. 
            </summary>
            <typeparam name="TAttribute">Type of binding attribute on the user's parameter.</typeparam>
            <typeparam name="TType">The user type must be compatible with this type for the binding to apply.</typeparam>
            <param name="builderType">A that implements IConverter for the target parameter. 
            This will get instantiated with the appropriate generic args to perform the builder rule.</param>
            <param name="constructorArgs">constructor arguments to pass to the typeBuilder instantiation. This can be used 
            to flow state (like configuration, secrets, etc) from the configuration to the specific binding</param>
            <returns>A binding rule.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.BindToInput``2(Microsoft.Azure.WebJobs.IConverter{``0,``1})">
            <summary>
            General rule for binding to an concrete input type for a given attribute. 
            </summary>
            <typeparam name="TAttribute">Type of binding attribute on the user's parameter.</typeparam>
            <typeparam name="TType">The user type must be compatible with this type for the binding to apply.</typeparam>
            <param name="builderInstance">Instance with converter methods on it.</param>
            <returns>A binding rule.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactory.GetTriggerBinding``2(Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy{``0,``1},System.Reflection.ParameterInfo,Microsoft.Azure.WebJobs.IConverterManager,System.Func{Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext,System.Boolean,System.Threading.Tasks.Task{Microsoft.Azure.WebJobs.Host.Listeners.IListener}})">
            <summary>
            Bind a  parameter to an IAsyncCollector. Use this for things that have discrete output items (like sending messages or writing table rows)
            This will add additional adapters to connect the user's parameter type to an IAsyncCollector. 
            </summary>
            <typeparam name="TMessage">The 'core type' for the IAsyncCollector.</typeparam>
            <typeparam name="TTriggerValue">The type of the trigger object to pass to the listener.</typeparam>
            <param name="bindingStrategy">A strategy object that describes how to do the binding</param>
            <param name="parameter">The user's parameter being bound to</param>
            <param name="converterManager">The converter manager, used to convert between the user parameter's type and the underlying native types used by the trigger strategy</param>
            <param name="createListener">A function to create the underlying listener for this parameter</param>
            <returns>A trigger binding</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IArgumentBindingProvider`1">
            <summary>
            Defines a provider of argument bindings of the specified type.
            </summary>
            <typeparam name="TArgumentBinding">The argument binding type.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IArgumentBindingProvider`1.TryCreate(System.Reflection.ParameterInfo)">
            <summary>
            Attempt to create an argument binding for the specified parameter.
            </summary>
            <param name="parameter">The property create a binding for.</param>
            <returns>A binding extension if this provider can bind to
            the parameter, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.OpenType">
            <summary>
            Placeholder to use with converter manager for describing generic types.     
            Derived classes can override IsMatch to provide a constraint. 
             OpenType matches any type. 
             MyDerivedType matches any type where IsMatch(type) is true. 
            Also applies to generics such as: 
             GenericClass&lt;OpenType&gt; 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.OpenType.IsMatch(System.Type)">
            <summary>
            Return true if and only if given type matches. 
            </summary>
            <param name="type">Type to check</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource">
            <summary>
            This class is used to create <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource"/> instances from path template strings.
            <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource"/> is used at binding time to capture parameter values from actual
            paths at runtime, for use in function parameter binding.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.#ctor(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="pattern">The template pattern.</param>
            <param name="captureRegex">The capture regular expression.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.Pattern">
            <summary>
            Gets the binding template pattern.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.ParameterNames">
            <summary>
            Gets the collection of template parameter names parsed from the template pattern.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.FromString(System.String,System.Boolean)">
            <summary>
            Factory method that constructs a <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource"/> from an input binding template pattern.
            </summary>
            <remarks>
            A template string may contain parameters embraced with curly brackets, which get replaced 
            with values later when the template is bound. 
            </remarks>
            <example>
            Below is a minimal template that illustrates a few basics:
            {p1}-p2/{{2014}}/folder/{name}.{ext}
            </example>
            <param name="pattern">A binding template pattern string in a supported format (see remarks).
            </param>
            <param name="ignoreCase">True if matches should be case insensitive.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource"/> for the specified template pattern.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.CreateBindingData(System.String)">
            <summary>
            Parses parameter values from the actual path if it matches the binding template pattern.
            </summary>
            <param name="actualPath">Path string to match</param>
            <returns>Dictionary of parameter names to parameter values, or null if no match.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.ToString">
            <summary>
            Returns a string representation of the binding template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource.BuildCapturePattern(System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateToken})">
            <summary>
            Utility method to build a regular expression to capture parameter values out of pre-parsed template tokens.
            </summary>
            <param name="tokens">Template tokens as generated and validated by 
            the <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateParser"/>.</param>
            <returns>Regex pattern to capture parameter values, containing named capturing groups, matching
            structure and parameter names provided by the list of tokens.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateParser">
            <summary>
            A class designed to provide a method of parsing binding template strings into a sequence of tokens.
            </summary>
            <remarks>
            A template is a plain text and may contain parameters embraced with curly brackets, which get replaced 
            with values later when the template is bound. 
            </remarks>
            <example>
            Below is a minimal template that illustrates a few basics:
            {p1}-p2/{{2014}}/folder/{name}.{ext}
            </example>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateParser.ParseTemplate(System.String)">
            <summary>
            Template parser's main entry point to validate and parse input template string.
            </summary>
            <param name="input">A template pattern string in supported format.</param>
            <returns>A read-only list of recognized and validated tokens.</returns>
            <exception cref="T:System.FormatException">Thrown when the input has unbalanced brackets, parameter name doesn't 
            match C# identifier definition, or some other content validation rule fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when input argument is null.</exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateParser.GetTokens(System.String)">
            <summary>
            Creates a streaming iterator to scan the input string and generate valid template tokens.
            </summary>
            <param name="input">A template pattern string in supported format.</param>
            <returns>A sequence of tokens.</returns>
            <exception cref="T:System.FormatException">Thrown when the input has unbalanced brackets, parameter name doesn't 
            match C# identifier definition, or some other content validation rule fails.</exception>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate">
            <summary>
            A binding template class providing method of resolving parameterized template into a string by replacing
            template parameters with parameter values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate.Pattern">
            <summary>
            Gets the binding pattern.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate.ParameterNames">
            <summary>
            Gets the collection of parameter names this pattern applies to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate.FromString(System.String,System.Boolean)">
            <summary>
            A factory method to parse input template string and construct a binding template instance using
            parsed tokens sequence.
            </summary>
            <param name="input">A binding template string in a format supported by <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateParser"/>.
            </param>
            <param name="ignoreCase">True if matching should be case insensitive.</param>
            <returns>Valid ready-to-use instance of <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Resolves original parameterized template into a string by replacing parameters with values provided as
            a dictionary.
            </summary>
            <param name="parameters">Dictionary providing parameter values.</param>
            <returns>Resolved string if succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when required parameter value is not available.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate.ToString">
            <summary>
            Gets a string representation of the binding template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateToken">
            <summary>
            Represents a semantic token as generated by <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateParser"/> during parsing of parameterized 
            binding template string. Then generated token may be consumed to create instance of 
            <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate"/> or <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplateSource"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.PatternMatcher.TryGetConverterFunc(System.Type,System.Type)">
            <summary>
            Get a converter function for the given types. 
            Types can be open generics, so this needs to find the appropriate IConverter interface and pattern match. 
            Throws if can't match - caller is responsible for doing type validation before invoking. 
            </summary>
            <param name="typeSource">source type</param>
            <param name="typeDest">destination type</param>
            <returns>converter function that takes in source type and returns destination type</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IResolutionPolicy">
            <summary>
            Resolution policy for "{ }" in  binding templates. 
            The default policy is a direct substitution for the binding data.
            Derived policies can enforce formatting or escaping when they do injection.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IResolutionPolicy.TemplateBind(System.Reflection.PropertyInfo,System.Attribute,Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Resolves the provided <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate"/>. 
            </summary>        
            <param name="propInfo">The property being resolved.</param>
            <param name="resolvedAttribute">The Attribute being resolved.</param>
            <param name="bindingTemplate">The BindingTemplate for the current property.</param>
            <param name="bindingData">The data for the current function invocation.</param>
            <returns>The resolved property value.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.TextWriterTraceAdapter">
            <summary>
            This adapter is used bind the function <see cref="T:System.IO.TextWriter"/> to both the
            <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> as well as the function output <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.TraceWriterBindingProvider">
            <summary>
            Binding provider handling bindings to both <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> and <see cref="T:System.IO.TextWriter"/>.
            <remarks>
            </remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingFactoryHelpers">
            <summary>
            Helpers for creating bindings to common patterns such as Messaging or Streams.
            This will add additional adapters to connect the user's parameter type to an IAsyncCollector. 
            It will also see <see cref="T:Microsoft.Azure.WebJobs.IConverterManager"/> to convert 
            from the user's type to the underlying IAsyncCollector's message type.
            For example, for messaging patterns, if the user is a ICollector, this will add an adapter that implements ICollector and calls IAsyncCollector.  
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.Data.StructDataBindingProvider`1">
            <summary>
            Handles value types (structs) as well as nullable types.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.Data.StructDataBinding`1">
            <summary>
            Handles value types (structs) as well as nullable types.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IBindingDataProvider">
            <summary>
            Interface defining methods used to generate binding contracts as well as binding data
            based on those contracts.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IBindingDataProvider.Contract">
            <summary>
            Gets the binding contract.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBindingDataProvider.GetBindingData(System.Object)">
            <summary>
            Returns the binding data for the specified value.
            </summary>
            <param name="value">The value to return binding data for.</param>
            <returns>The collection of binding data or null.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext">
            <summary>
            Context for binding to a particular parameter value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.#ctor(Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="functionContext">The context for the parent function.</param>
            <param name="cancellationToken">The <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.CancellationToken"/> to use.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.FunctionContext">
            <summary>
            The function context.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.FunctionInstanceId">
            <summary>
            The instance ID of the function being bound to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.FunctionCancellationToken">
            <summary>
            Gets the function <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.CancellationToken"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.Trace">
            <summary>
            Gets the output <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.CancellationToken">
            <summary>
            Gets the <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataPathHelper">
            <summary>
            Class containing helper methods for path binding
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataPathHelper.ConvertParameters(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Converts all parameter values in the specified binding data to their path compatible string values.
            </summary>
            <param name="bindingData">The binding data to convert.</param>
            <returns>A collection of path compatible parameters.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataPathHelper.ConvertParameterValueToString(System.Object)">
            <summary>
            Convert a parameter value of supported type into path compatible string value.
            The set of supported types is limited to built-in signed/unsigned integer types, 
            strings, and Guid (which is translated in canonical form without curly braces).
            </summary>
            <param name="parameterValue">The parameter value to convert</param>
            <returns>Path compatible string representation of the given parameter or null if its type is not supported.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingTemplateExtensions">
            <summary>
            Class containing extension methods for <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate"/> and other binding Types.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingTemplateExtensions.ValidateContractCompatibility(Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Type})">
            <summary>
            Verifies that the specified binding contract contains contract members for each of the
            parameters in the specified <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate"/>.
            </summary>
            <param name="bindingTemplate">The binding template to validate.</param>
            <param name="bindingDataContract">The data contract to validate against.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingTemplateExtensions.Bind(Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Bind the <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.Path.BindingTemplate"/> using the specified binding data.
            </summary>
            <param name="bindingTemplate">The binding template to validate.</param>
            <param name="bindingData">The binding data to apply to the template.</param>
            <returns>The bound template string.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IBindablePath`1">
            <summary>
            Defines an interface for performing path bindings. 
            </summary>
            <typeparam name="TPath">The type of the path binding.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IBindablePath`1.IsBound">
            <summary>
            Gets a value indicating whether this path is bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IBindablePath`1.ParameterNames">
            <summary>
            Gets the collection of parameter names for the path.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBindablePath`1.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Bind to the path.
            </summary>
            <param name="bindingData">The binding data.</param>
            <returns>The path binding.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBindablePath`1.ToString">
            <summary>
            Gets a string representation of the path.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext">
            <summary>
            Provides binding context for all bind operations scoped to a particular
            function invocation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext.#ctor(System.Guid,System.Threading.CancellationToken,Microsoft.Azure.WebJobs.Host.TraceWriter)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="functionInstanceId">The instance ID of the function being bound to.</param>
            <param name="functionCancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use.</param>
            <param name="trace">The trace writer.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext.FunctionInstanceId">
            <summary>
            Gets the instance ID of the function being bound to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext.FunctionCancellationToken">
            <summary>
            Gets the <see cref="T:System.Threading.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.FunctionBindingContext.Trace">
            <summary>
            Gets the output <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext">
            <summary>
            Context for parameter binding.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.#ctor(Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="valueContext">The value binding context.</param>
            <param name="bindingData">The binding data.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.FunctionInstanceId">
            <summary>
            The instance ID of the function being bound to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.FunctionCancellationToken">
            <summary>
            Gets the function <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.CancellationToken"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.Trace">
            <summary>
            Gets the output <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.BindingData">
            <summary>
            Gets the binding data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.CancellationToken">
            <summary>
            Gets the <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingContext.ValueContext">
            <summary>
            Gets the value binding context.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider">
            <summary>
            This class is used to generate binding contracts as well as binding data
            based on those contracts.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider.Contract">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider.GetBindingData(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider.FromType(System.Type)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider"/> instance for the specified Type.
            </summary>
            <param name="type">The Type to return a <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider"/> for.</param>
            <returns>A <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider"/> instance or null for unsupported types.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider.FromTemplate(System.String,System.Boolean)">
            <summary>
            Create a <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider"/> instance for the specified binding template.
            </summary>
            <param name="template">The binding template.</param>
            <param name="ignoreCase">True if matches should be case insensitive.</param>
            <returns>A <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingDataProvider"/> instance.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext">
            <summary>
            Provides context for parameter bind operations. See <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IBinding"/>
            or <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider"/> for more information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext.#ctor(System.Reflection.ParameterInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Type},System.Threading.CancellationToken)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="parameter">The parameter to bind to.</param>
            <param name="bindingDataContract">The binding data contract.</param>
            <param name="cancellationToken">The <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext.CancellationToken"/> to use.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext.Parameter">
            <summary>
            Gets the parameter to bind to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext.BindingDataContract">
            <summary>
            Gets the data contract for the binding.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext.CancellationToken">
            <summary>
            Gets the <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IArgumentBinding`1">
            <summary>
            Interface for performing bind operations on job function arguments.
            </summary>
            <typeparam name="TArgument">The argument type.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IArgumentBinding`1.ValueType">
            <summary>
            The <see cref="T:System.Type"/> of the argument value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IArgumentBinding`1.BindAsync(`0,Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext)">
            <summary>
            Bind to the specified argument value using the specified binding context.
            </summary>
            <param name="value">The value to bind to.</param>
            <param name="context">The binding context.</param>
            <returns>A task that returns the <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider"/> for the bound argument.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IBinding">
            <summary>
            Defines an interface for a parameter binding.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IBinding.FromAttribute">
            <summary>
            Gets a value indicating whether the binding was sourced from a parameter attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBinding.BindAsync(System.Object,Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext)">
            <summary>
            Perform a bind to the specified value.
            </summary>
            <param name="value">The value to bind to.</param>
            <param name="context">The binding context.</param>
            <returns>A task that returns the <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider"/> for the binding.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBinding.BindAsync(Microsoft.Azure.WebJobs.Host.Bindings.BindingContext)">
            <summary>
            Perform a bind using the specified context.
            </summary>
            <param name="context"></param>
            <returns>A task that returns the <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider"/> for the binding.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBinding.ToParameterDescriptor">
            <summary>
            Get a description of the binding.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider">
            <summary>
            Defines an interface for the creation of parameter bindings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider.TryCreateAsync(Microsoft.Azure.WebJobs.Host.Bindings.BindingProviderContext)">
            <summary>
            Try to create a binding using the specified context.
            </summary>
            <param name="context">The binding context.</param>
            <returns>A task that returns the binding on completion.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IOrderedValueBinder">
            <summary>
            Defines an <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueBinder"/> that provides an ordering hint./>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IOrderedValueBinder.StepOrder">
            <summary>
            Gets the bind order for the binder.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueBinder">
            <summary>
            Defines methods for binding to a value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IValueBinder.SetValueAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the value
            </summary>
            <param name="value">The new value to set.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider">
            <summary>
            Defines methods for retrieving information for an arbitrary value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider.Type">
            <summary>
            Gets the <see cref="P:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider.Type"/> of the value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider.GetValueAsync">
            <summary>
            Gets the value.
            </summary>
            <returns>A task that returns the value.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider.ToInvokeString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>The string representation of the value.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Bindings.BindStepOrder">
            <summary>
            An enumeration of binding order values. These values are used by <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IOrderedValueBinder"/>
            when determining which order to bind function out parameters.
            <remarks>
            Generally parameters are bound in their declared order. However, consider a situation where
            a function has output parameters for both a blob and a queue. We want to enqueue the message
            AFTER the blob. That way, if the queue message has a blob path in it, there is no race condition
            for the message consumer. The <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.BindStepOrder"/> declaration for a <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IOrderedValueBinder"/>
            allows this ordering to be accomplished.
            </remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Bindings.BindStepOrder.Default">
            <summary>
            Default bind order (i.e. parameter declaration order).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Bindings.BindStepOrder.Enqueue">
            <summary>
            Indicates that a parameter should be bound at a later stage, since it might be enqueueing
            a message that references entities generated by other bindings.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.BlobQueueRegistration">
            <summary>
            Class containing registration data used by the <see cref="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.SharedBlobQueueListener"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.BlobQueueRegistration.Executor">
            <summary>
            The function executor used to execute the function when a queue
            message is received for a blob that needs processing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.BlobQueueRegistration.BlobClient">
            <summary>
            The storage client to use to retrieve the blob (i.e., the
            storage account that the blob triggered function is listening
            to).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.BlobQueueRegistration.QueueClient">
            <summary>
            The storage client to use for the poison queue.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.ScanBlobScanLogHybridPollingStrategy.PollNewBlobsAsync(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlobContainer,Microsoft.Azure.WebJobs.Host.Blobs.Listeners.ContainerScanInfo,System.Threading.CancellationToken)">
            <summary>
            This method is called each polling interval for all containers. The method divides the 
            budget of allocated number of blobs to query, for each container we query a page of 
            that size and we keep the continuation token for the next time. AS a curser, we use
            the time stamp when the current cycle on the container started. blobs newer than that
            time will be considered new and registrations will be notified
            </summary>
            <param name="container"></param>
            <param name="containerScanInfo"> Information that includes the last cycle start
            the continuation token and the current cycle start for a container</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.SharedBlobQueueListenerFactory.SharedBlobQueueProcessor">
            <summary>
            Custom queue processor for the shared blob queue.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogParser">
            <summary>
            Implements parsing of Storage Analytics Log file.
            </summary>
            <remarks>
            Storage Analytics Log Format defined at <a href="http://msdn.microsoft.com/en-us/library/windowsazure/hh343259.aspx"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogParser.ParseLogAsync(Microsoft.Azure.WebJobs.Host.Storage.Blob.IStorageBlob,System.Threading.CancellationToken)">
            <summary>
            Given a log file (as a blob), parses it and return a collection of log entries matching version 1.0
            of the Storage Analytics Log Format.
            </summary>
            <param name="blob">Object representing a cloud blob with Storage Analytics log content.</param>
            <param name="cancellationToken">A token to monitor for cancellation request.</param>
            <returns>Collection of successfully parsed log entries.</returns>
            <exception cref="T:System.FormatException">If unable to parse a line in given log.</exception>
            <seealso cref="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry"/>
            <remarks>
            The method scans log file lines one at a time. 
            First it attempts to detect a line format version and throws an exception if failed to do so.
            It skips all lines with version different than supported one, i.e. 1.0.
            Then it calls TryParseLogEntry to create a log entry out of every line of supported version and throws 
            an exception if the parse method returns null.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogParser.TryParseVersion(System.String)">
            <summary>
            Attempts to parse first field of a log line assuming it's in 'Major.Minor' version format 
            followed by ';'
            </summary>
            <param name="line">A line as extracted from a Storage Analytics Log file.</param>
            <returns>Parsed instance of <see cref="T:System.Version"/> or null if parsing has failed.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogParser.TryParseLogEntry(System.String)">
            <summary>
            Attempts to parse a single line of Storage Analytics Log file using Regex matches.
            </summary>
            <param name="line">A line as extracted from a Storage Analytics Log file. Must not be null or empty.</param>
            <returns>Parsed instance of <see cref="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry"/> if the given line matches expected format
            of the Storage Analytics Log v1.0, or null otherwise.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageServiceType">
            <summary>
            Enumerates possible values of the requested storage service field declared by
            Storage Analytics Log format.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry">
            <summary>
            Represents an entry of the Storage Analytics Log.
            </summary>
            <remarks>
            Storage Analytics Log Format defined at <a href="http://msdn.microsoft.com/en-us/library/windowsazure/hh343259.aspx"/>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry.RequestStartTime">
            <summary>
            The time in UTC when the request was received by Storage Analytics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry.OperationType">
            <summary>
            The type of REST operation performed. May be omitted if not recognized.
            </summary>
            <remarks>
            See full list of possible operations at <a href="http://msdn.microsoft.com/en-us/library/windowsazure/hh343260.aspx"/>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry.ServiceType">
            <summary>
            The requested storage service: blob, table, or queue. May be omitted if not recognized.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry.RequestedObjectKey">
            <summary>
            The key of the requested object. This field will always use the account name, even if a custom domain name
            has been configured.
            </summary>
            <remarks>
            The key may be in one of the following formats:
            <list type="bullet">
            <item>
            [<![CDATA[https://storagesample.blob.core.windows.net/sample-container/sample-blob.txt]]>
            </item>
            <item>
            [<![CDATA[/account/container/blob]]>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry.TryParse(System.String[])">
            <summary>
            A factory method attempting to create an instance of entry out of array of fields as extracted from
            a single line in Storage Analytics Log file.
            </summary>
            <param name="fields">
            Array of string values of fields as extracted from a single line in a log file. 
            It must not be null and should contain exactly 30 items.
            </param>
            <returns>A valid instance of <see cref="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry"/> if given fields match expected format,
            or null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry.ToBlobPath">
            <summary>
            Attempts to retrieve a blob path out of log entry's RequestedObjectKey.
            </summary>
            <returns>
            A valid instance of <see cref="T:Microsoft.Azure.WebJobs.Host.Blobs.BlobPath"/>, or null if log entry is not associated with a blob.
            </returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageServiceOperationType">
            <summary>
            Enumerates the operations that are logged for the corresponding storage service.
            </summary>
            <remarks>
            The only items included here are the ones used by BlobTrigger.
            See full list of possible operations at <a href="http://msdn.microsoft.com/en-us/library/windowsazure/hh343260.aspx"/>, but
            note that currently it is slightly buggy (PreflightBlobRequest should be BlobPreflightRequest, and GetLeaseInfo
            should be GetBlobLeaseInfo).
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogColumnId">
            <summary>
            Zero-based index of fields in a Storage Analytics Log entry format consumed by the WebJobs SDK.
            </summary>
            <remarks>
            Each version 1.0 log entry adheres to the following format:
            <![CDATA[
            <version-number>;<request-start-time>;<operation-type>;<request-status>;<http-status-code>;<end-to-end-latency-in-ms>;<server-latency-in-ms>;<authentication-type>;<requester-account-name>;<owner-account-name>;<service-type>;<request-url>;<requested-object-key>;<request-id-header>;<operation-count>;<requester-ip-address>;<request-version-header>;<request-header-size>;<request-packet-size>;<response-header-size>;<response-packet-size>;<request-content-length>;<request-md5>;<server-md5>;<etag-identifier>;<last-modified-time>;<conditions-used>;<user-agent-header>;<referrer-header>;<client-request-id> 
            ]]>
            Storage Analytics Log Format defined at <a href="http://msdn.microsoft.com/en-us/library/windowsazure/hh343259.aspx"/>
            </remarks>
            <seealso cref="T:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogEntry"/>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogColumnId.VersionNumber">
            <summary>
            The version of Storage Analytics Logging used to record the entry.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Blobs.Listeners.StorageAnalyticsLogColumnId.LastColumn">
            <summary>
            Index of the last column in a log entry.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Bindings.OutByteArrayArgumentBindingProvider.OutputByteArrayBinding.ByteArrayValueBinder.SetValueAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Stores content of a byte[] into the bound CloudBLob.
            </summary>
            <param name="value">byte[] object as retrieved from user's WebJobs method argument.</param>
            <param name="cancellationToken">a cancellation token</param>
            <remarks>
            The out byte[] parameter is processed as follows:
            <list type="bullet">
            <item>
            <description>
            If the value is <see langword="null"/>, no blob will be created.
            </description>
            </item>
            <item>
            <description>
            If the value is an empty byte[], a blob with empty content will be created.
            </description>
            </item>
            <item>
            <description>
            If the value is a non-empty byte[], a blob with that content will be created.
            </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Bindings.WatchableCloudBlobStream.CompleteAsync(System.Threading.CancellationToken)">
            <summary>Commits the stream as appropriate (when written to or flushed) and finalizes status.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that commits the stream as appropriate and finalizes status. The result of the task is
            <see langword="true"/> when the stream was committed (either by this method or previously); otherwise,
            <see langword="false"/>
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Blobs.Bindings.OutStringArgumentBindingProvider.StringArgumentBinding.StringValueBinder.SetValueAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Stores content of a string in utf-8 encoded format into the bound CloudBLob.
            </summary>
            <param name="value">string object as retrieved from user's WebJobs method argument.</param>
            <param name="cancellationToken">a cancellation token</param>
            <remarks>
            The out string parameter is processed as follows:
            <list type="bullet">
            <item>
            <description>
            If the value is <see langword="null"/>, no blob will be created.
            </description>
            </item>
            <item>
            <description>
            If the value is an empty string, a blob with empty content will be created.
            </description>
            </item>
            <item>
            <description>
            If the value is a non-empty string, a blob with that content will be created.
            </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Blobs.BlobCausalityManager">
            <summary>
            Tracks which function wrote each blob via blob metadata. 
            </summary>
            <remarks>
            This may be risky because it does interfere with the function (and the user could tamper with it
            or accidentally remove it).
            An alternative mechanism would be to have a look-aside table. But that's risky because it's
            a separate object to manage and could get out of sync.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionInstanceTraceWriter">
            <summary>
            The <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> passed to function instances. This class adds function instance details
            to all trace events.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult">
            <summary>
            Represents the result of a job function invocation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult.#ctor(System.Boolean)">
            <summary>
            Constructs a new instance using the specified success value.
            </summary>
            <param name="succeeded">Value indicating whether the function succeeded.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult.#ctor(System.Exception)">
            <summary>
            Constructs a new failure instance using the provided exception.
            </summary>
            <param name="exception">The exception that the function threw.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult.#ctor(System.Boolean,System.Exception)">
            <summary>
            Constructs a new failure instance using the specified success value
            and exception.
            </summary>
            <remarks>
            This overload allows a function result to be considered success,
            while also specifying an exception that occurred, but was handled.
            </remarks>
            <param name="succeeded">Value indicating whether the function succeeded.</param>
            <param name="exception">The exception that the function threw.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult.Succeeded">
            <summary>
            Gets or sets a value indicating whether the function succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult.Exception">
            <summary>
            Gets or sets the exception that occurred during function execution.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Executors.ITriggeredFunctionExecutor">
            <summary>
            Interface defining the contract for executing a triggered function.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.ITriggeredFunctionExecutor.TryExecuteAsync(Microsoft.Azure.WebJobs.Host.Executors.TriggeredFunctionData,System.Threading.CancellationToken)">
            <summary>
            Try to invoke the triggered function using the values specified.
            </summary>
            <param name="input">The trigger invocation details.</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult"/> describing the results of the invocation.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Executors.TriggeredFunctionData">
            <summary>
            Represents the input values for a triggered function invocation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Executors.TriggeredFunctionData.ParentId">
            <summary>
            The parent ID for the triggered function invocation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Executors.TriggeredFunctionData.TriggerValue">
            <summary>
            The trigger value for a specific triggered function invocation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountProviderExtensions.GetAccountOverrideOrNull(System.Reflection.ParameterInfo)">
            <summary>
            Walk from the parameter up to the containing type, looking for a
            <see cref="T:Microsoft.Azure.WebJobs.StorageAccountAttribute"/>. If found, return the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParseResult">
            <summary>
            Enumerates list of possible errors detected by the <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParser"/> while trying to
            parse Microsoft Azure Cloud Storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParser">
            <summary>
            Utility class designed to parse given connection string and create instance of the
            <see cref="T:Microsoft.WindowsAzure.Storage.CloudStorageAccount"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParser.ParseAccount(System.String,System.String,System.IServiceProvider)">
            <summary>
            Throwing version of parse account API. It calls TryParseAccount internally, analyzes returned result,
            and throws an exception with formatted message in case of error.
            </summary>
            <param name="connectionString">A Storage account connection string as retrieved from the config</param>
            <param name="connectionStringName">Friendly connection string name used to format error message</param>
            <param name="services">The <see cref="T:System.IServiceProvider"/> to use.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.WebJobs.Host.Storage.StorageAccount"/> associated with the given connection string</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParser.TryParseAccount(System.String,Microsoft.WindowsAzure.Storage.CloudStorageAccount@)">
            <summary>
            Non-throwing core version of parse account API.
            </summary>
            <param name="connectionString">A Storage account connection string as retrieved from the JobHost configuration</param>
            <param name="account">Out parameter to return instance of <see cref="T:Microsoft.WindowsAzure.Storage.CloudStorageAccount"/> in case of success</param>
            <returns>Error code of parse account attempt</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParser.FormatParseAccountErrorMessage(Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParseResult,System.String)">
            <summary>
            Formats an error message corresponding to the provided error code and account.
            </summary>
            <param name="error">The error code as returned by <see cref="M:Microsoft.Azure.WebJobs.Host.Executors.StorageAccountParser.TryParseAccount(System.String,Microsoft.WindowsAzure.Storage.CloudStorageAccount@)"/> method call.</param>
            <param name="connectionStringName">Friendly connection string name used to format error message</param>
            <returns>Formatted error message with details about reason of the failure and possible ways of mitigation</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.DefaultStorageAccountProvider.#ctor(System.IServiceProvider)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="services">The <see cref="T:System.IServiceProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.DefaultStorageAccountProvider.#ctor(System.IServiceProvider,System.String)">
            <summary>
            Initializes a new instance of the class, using a single Microsoft Azure
            Storage connection string for both reading and writing data as well as logging.
            </summary>
            <param name="services">The <see cref="T:System.IServiceProvider"/> to use.</param>
            <param name="dashboardAndStorageConnectionString">
            The Azure Storage connection string for accessing data and logging.
            </param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Executors.DefaultStorageAccountProvider.DashboardConnectionString">
            <summary>Gets or sets the Azure Storage connection string used for logging and diagnostics.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Executors.DefaultStorageAccountProvider.StorageConnectionString">
            <summary>Gets or sets the Azure Storage connection string used for reading and writing data.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor.StartFunctionTimeout(Microsoft.Azure.WebJobs.Host.Executors.IFunctionInstance,Microsoft.Azure.WebJobs.TimeoutAttribute,System.Threading.CancellationTokenSource,Microsoft.Azure.WebJobs.Host.TraceWriter)">
            <summary>
            If the specified function instance requires a timeout (via <see cref="T:Microsoft.Azure.WebJobs.TimeoutAttribute"/>),
            create and start the timer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor.TryHandleTimeoutAsync(System.Threading.Tasks.Task,System.Threading.CancellationToken,System.Boolean,System.Threading.CancellationToken,System.TimeSpan,Microsoft.Azure.WebJobs.Host.Executors.IFunctionInstance,System.Action)">
            <summary>
            Executes a timeout pattern. Throws an exception if the timeoutToken is canceled before taskToTimeout completes and throwOnTimeout is true.
            </summary>
            <param name="invokeTask">The task to run.</param>
            <param name="shutdownToken">A token that is canceled if a host shutdown is requested.</param>
            <param name="throwOnTimeout">True if the method should throw an OperationCanceledException if it times out.</param>
            <param name="timeoutToken">The token to watch. If it is canceled, taskToTimeout has timed out.</param>
            <param name="onTimeout">A callback to be executed if a timeout occurs.</param>
            <param name="timeoutInterval">The timeout period. Used only in the exception message.</param>
            <param name="instance">The function instance. Used only in the exceptionMessage</param>
            <returns>True if a timeout occurred. Otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException">
            <summary>
            Exception thrown when a job function invocation fails due to a timeout.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.#ctor(System.String,System.Guid,System.String,System.TimeSpan,System.Threading.Tasks.Task,System.Exception)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="message">The exception message.</param>
            <param name="instanceId">The function instance Id.</param>
            <param name="methodName">The fully qualified method name.</param>
            <param name="timeout">The configured timeout value.</param>
            <param name="task">The function Task.</param>
            <param name="innerException">The exception that is the cause of the current exception (or null).</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.Timeout">
            <summary>
            The function timeout value that expired.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.Task">
            <summary>
            The task that did not complete due to a timeout.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.JobHostBlobsConfiguration">
            <summary>
            Represents configuration for <see cref="T:Microsoft.Azure.WebJobs.BlobTriggerAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.JobHostBlobsConfiguration.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostBlobsConfiguration.CentralizedPoisonQueue">
            <summary>
            Gets or sets a value indicating whether a single centralized
            poison queue for poison blobs should be used (in the primary
            storage account) or whether the poison queue for a blob triggered
            function should be co-located with the target blob container.
            This comes into play only when using multiple storage accounts via
            <see cref="T:Microsoft.Azure.WebJobs.StorageAccountAttribute"/>. The default is false.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs">
            <summary>
            Event argument class for when poison messages
            are added to a poison queue.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs.#ctor(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.CloudQueue)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="message">The poison message</param>
            <param name="poisonQueue">The poison queue</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs.Message">
            <summary>
            The poison message
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs.PoisonQueue">
            <summary>
            The poison queue
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory">
            <summary>
            Factory for creating <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory.Create(Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> using the specified context.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext"/> to use.</param>
            <returns>A <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> instance.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor">
            <summary>
            This class defines a strategy used for processing queue messages.
            </summary>
            <remarks>
            Custom <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> implementations can be registered by implementing
            a custom <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory"/> and setting it via <see cref="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.QueueProcessorFactory"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.#ctor(Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="context">The factory context.</param>
        </member>
        <member name="E:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.MessageAddedToPoisonQueue">
            <summary>
            Event raised when a message is added to the poison queue.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.BatchSize">
            <summary>
            Gets or sets the number of queue messages to retrieve and process in parallel.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.MaxDequeueCount">
            <summary>
            Gets or sets the number of times to try processing a message before moving it to the poison queue.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.NewBatchThreshold">
            <summary>
            Gets or sets the threshold at which a new batch of messages will be fetched.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.MaxPollingInterval">
            <summary>
            Gets or sets the longest period of time to wait before checking for a message to arrive when a queue remains
            empty.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.VisibilityTimeout">
            <summary>
            Gets or sets the default message visibility timeout that will be used
            for messages that fail processing.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.BeginProcessingMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)">
            <summary>
            This method is called when there is a new message to process, before the job function is invoked.
            This allows any preprocessing to take place on the message before processing begins.
            </summary>
            <param name="message">The message to process.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use</param>
            <returns>True if the message processing should continue, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.CompleteProcessingMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.Azure.WebJobs.Host.Executors.FunctionResult,System.Threading.CancellationToken)">
            <summary>
            This method completes processing of the specified message, after the job function has been invoked.
            </summary>
            <remarks>
            If the message was processed successfully, the message should be deleted. If message processing failed, the
            message should be release back to the queue, or if the maximum dequeue count has been exceeded, the message
            should be moved to the poison queue (if poison queue handling is configured for the queue).
            </remarks>
            <param name="message">The message to complete processing for.</param>
            <param name="result">The <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult"/> from the job invocation.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.CopyMessageToPoisonQueueAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.CloudQueue,System.Threading.CancellationToken)">
            <summary>
            Moves the specified message to the poison queue.
            </summary>
            <param name="message">The poison message</param>
            <param name="poisonQueue">The poison queue to copy the message to</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.ReleaseMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.Azure.WebJobs.Host.Executors.FunctionResult,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Release the specified failed message back to the queue.
            </summary>
            <param name="message">The message to release</param>
            <param name="result">The <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult"/> from the job invocation.</param>
            <param name="visibilityTimeout">The visibility timeout to set for the message</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)">
            <summary>
            Delete the specified message.
            </summary>
            <param name="message">The message to delete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.OnMessageAddedToPoisonQueue(Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs)">
            <summary>
            Called to raise the MessageAddedToPoisonQueue event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Queues.DefaultQueueProcessorFactory">
            <summary>
            The default <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory"/> implementation used by <see cref="T:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.DefaultQueueProcessorFactory.Create(Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext">
            <summary>
            Provides context input for <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.#ctor(Microsoft.WindowsAzure.Storage.Queue.CloudQueue,Microsoft.Azure.WebJobs.Host.TraceWriter,Microsoft.WindowsAzure.Storage.Queue.CloudQueue)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="queue">The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> the <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> will operate on.</param>
            <param name="trace">The <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> to trace events to.</param>
            <param name="poisonQueue">The queue to move messages to when unable to process a message after the maximum dequeue count has been exceeded. May be null.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.#ctor(Microsoft.WindowsAzure.Storage.Queue.CloudQueue,Microsoft.Azure.WebJobs.Host.TraceWriter,Microsoft.Azure.WebJobs.Host.Queues.IQueueConfiguration,Microsoft.WindowsAzure.Storage.Queue.CloudQueue)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="queue">The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> the <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> will operate on.</param>
            <param name="trace">The <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> to write to.</param>
            <param name="queueConfiguration">The queue configuration.</param>
            <param name="poisonQueue">The queue to move messages to when unable to process a message after the maximum dequeue count has been exceeded. May be null.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.Queue">
            <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> the <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> will operate on.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.PoisonQueue">
            <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> for poison messages that the <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> will use.
            May be null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.Trace">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.BatchSize">
            <summary>
            Gets or sets the number of queue messages to retrieve and process in parallel (per job method).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.MaxDequeueCount">
            <summary>
            Gets or sets the maximum number of times to try processing a message before moving
            it to the poison queue (if a poison queue is configured for the queue).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.NewBatchThreshold">
            <summary>
            Gets or sets the threshold at which a new batch of messages will be fetched.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.MaxPollingInterval">
            <summary>
            Gets or sets the longest period of time to wait before checking for a message to arrive when a queue remains
            empty.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorFactoryContext.VisibilityTimeout">
            <summary>
            Gets or sets the message visibility that will be used for messages that
            fail processing.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Queues.QueueCausalityManager">
            <summary>
            Tracks causality via JSON formatted queue message content. 
            Adds an extra field to the JSON object for the parent guid name.
            </summary>
            <remarks>
            Important that this class can interoperate with external queue messages, 
            so be resilient to a missing guid marker. 
            Can we switch to some auxiliary table? Beware, CloudQueueMessage. 
            Id is not filled out until after the message is queued, 
            but then there's a race between updating the aux storage and another function picking up the message.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Queues.QueueClient.ValidateQueueName(System.String)">
            <summary>
            Ensures that the passed name is a valid queue name.
            If not, an ArgumentException is thrown
            </summary>
            <exception cref="T:System.ArgumentException">If the name is invalid</exception>
            <param name="name">The name to be tested</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContextExtensions">
            <summary>
            Helper Extension methods for extension configuration. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContextExtensions.RegisterBindingRules``1(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext,System.Action{``0,System.Type},Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider[])">
            <summary>
            Register a set of rules to handle binding to a given attribute. 
            </summary>
            <typeparam name="TAttribute">The attribute to bind to</typeparam>
            <param name="context"></param>
            <param name="validator">a validator function to invoke on the attribute before runtime. </param>
            <param name="bindingProviders">list of binding providers to handle this attribute. 
            If none of these handle the attribute, an error is thrown at indexing. </param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContextExtensions.RegisterBindingRules``1(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext,Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider[])">
            <summary>
            Register a set of rules to handle binding to a given attribute. 
            </summary>
            <typeparam name="TAttribute">The attribute to bind to</typeparam>
            <param name="context"></param>
            <param name="bindingProviders">list of binding providers to handle this attribute. 
            If none of these handle the attribute, an error is thrown at indexing. </param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext">
            <summary>
            Context object passed to <see cref="T:Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider"/> instances when
            they are initialized.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext.Config">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.WebJobs.JobHostConfiguration"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext.Trace">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider">
            <summary>
            Defines an interface enabling 3rd party extensions to participate in the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> configuration
            process to register their own extension types. Any registered <see cref="T:Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider"/> instances
            added to the service container will be invoked at the right time during startup.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Config.IExtensionConfigProvider.Initialize(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext)">
            <summary>
            Initializes the extension. Initialization should register any extension bindings
            with the <see cref="T:Microsoft.Azure.WebJobs.Host.IExtensionRegistry"/> instance, which can be obtained from the
            <see cref="T:Microsoft.Azure.WebJobs.JobHostConfiguration"/> which is an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext"/></param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Tables.PocoEntityWriter`1">
            <summary>
            The POCO entity writer.
            </summary>
            <typeparam name="T">The POCO type.</typeparam>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Tables.TableEntityWriter`1.MaxBatchSize">
            <summary>
            Max batch size is an azure limitation on how many entries can be in each batch.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Tables.TableEntityWriter`1.MaxPartitionWidth">
            <summary>
            How many different partition keys to cache offline before flushing.
            This means the max offline cache size is (MaxPartitionWidth * (MaxBatchSize-1)) entries.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2">
            <summary>
            Strategy pattern to describe how to bind a core trigger type to various parameter.
            The strategy supports:
            <list>
            <item>dispatching items one at time (Single) or an array of items in a single a batch (Multiple). Multiple dispatch may allow faster throughput.</item> 
            <item>core binding, string, poco w/ Binding Contracts</item>
            </list>
            For example, a single QueueTriggerInput -->  can bind to 
             CloudQueueMessage, CloudQueueMessage[], string, string[], Poco, Poco[]    
            </summary>
            <typeparam name="TMessage">The native message type. For Azure Queues, this would be CloudQueueMessage.</typeparam>
            <typeparam name="TTriggerValue">The type of the trigger object that the listener returns. This could represent a single message or a batch of messages.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2.ConvertFromString(System.String)">
            <summary>
            Given a raw string, convert to a TTriggerValue.
            This is primarily used in the "invoke from dashboard" path. 
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2.GetStaticBindingContract">
            <summary>
            Get the static route-parameter contract for the TMessage. 
            For example, if we bind a queue message to a POCO, 
            then the properties on that type are route parameters that can feed into other bindings. 
            Intentionally make this mutable so that callers can add more items to it and override defaults. 
            </summary>
            <returns>A map of the names of items in the binding contract and their types.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2.GetContractInstance(`1)">
            <summary>
            Get the values of the route-parameters given an instance of the trigger value. 
            This should match the structure in GetStaticBindingContract. 
            Intentionally make this mutable so that callers can add more items to it. 
            </summary>
            <param name="value">The instance of the trigger object.</param>
            <returns>Runtime values based on the trigger value for the binding contract.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2.BindSingle(`1,Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext)">
            <summary>
            Bind as a single-item dispatch. 
            This gets called when somebody has a function like:
                MyTrigger([Trigger] TMessage item)
            </summary>
            <param name="value">the trigger value</param>
            <param name="context">runtime binding information</param>
            <returns>the single message instance to bind to the user's function</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingStrategy`2.BindMultiple(`1,Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext)">
            <summary>
            Bind as a multiple-item dispatch. 
            This gets called when somebody has a function like:
                MyTrigger([Trigger] TMessage[] items )
            </summary>
            <param name="value">the trigger value</param>
            <param name="context">runtime binding information</param>
            <returns>the batch of instances to bind to the user's function</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerDataArgumentBinding`1">
            <summary>
            Interface providing the capability to bind to trigger parameter values.
            </summary>
            <typeparam name="TTriggerValue">The type of the trigger value.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerDataArgumentBinding`1.ValueType">
            <summary>
            Gets the type of the trigger value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerDataArgumentBinding`1.BindingDataContract">
            <summary>
            Gets the binding data contract.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerDataArgumentBinding`1.BindAsync(`0,Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext)">
            <summary>
            Bind to the specified trigger value.
            </summary>
            <param name="value">The value to bind to.</param>
            <param name="context">The binding context.</param>
            <returns>A task that returns the <see cref="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerData"/> for the binding.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding">
            <summary>
            Interface defining a trigger parameter binding.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding.TriggerValueType">
            <summary>
            The trigger value type that this binding binds to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding.BindingDataContract">
            <summary>
            Gets the binding data contract.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding.BindAsync(System.Object,Microsoft.Azure.WebJobs.Host.Bindings.ValueBindingContext)">
            <summary>
            Perform a bind to the specified value using the specified binding context.
            </summary>
            <param name="value">The value to bind to.</param>
            <param name="context">The binding context.</param>
            <returns>A task that returns the <see cref="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerData"/> for the binding.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding.CreateListenerAsync(Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.WebJobs.Host.Listeners.IListener"/> for the trigger parameter.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext"/> to use.</param>
            <returns>The <see cref="T:Microsoft.Azure.WebJobs.Host.Listeners.IListener"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding.ToParameterDescriptor">
            <summary>
            Get a description of the binding.
            </summary>
            <returns>The <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.ParameterDescriptor"/></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingProvider">
            <summary>
            Defines a provider of <see cref="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding"/>s
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingProvider.TryCreateAsync(Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext)">
            <summary>
            Try to bind using the specified context.
            </summary>
            <param name="context">The binding context.</param>
            <returns>A <see cref="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding"/> if successful, null otherwise.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerData">
            <summary>
            Defines an interface for representing data returned after a trigger
            parameter value is bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerData.ValueProvider">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider"/> for the bound parameter value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerData.BindingData">
            <summary>
            Gets the collection of binding data for the bound parameter value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext">
            <summary>
            Represents context data used by <see cref="T:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBindingProvider"/> in the creation of bindings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext.#ctor(System.Reflection.ParameterInfo,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="parameter">The parameter to be bound.</param>
            <param name="cancellationToken">The <see cref="P:Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext.CancellationToken"/> to use.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext.Parameter">
            <summary>
            The parameter to be bound.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext.CancellationToken">
            <summary>
            The <see cref="P:Microsoft.Azure.WebJobs.Host.Triggers.TriggerBindingProviderContext.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Triggers.TriggerData">
            <summary>
            Represents data returned after a trigger parameter value is bound.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Triggers.TriggerData.#ctor(Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Creates a new instance
            </summary>
            <param name="valueProvider"></param>
            <param name="bindingData"></param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.TriggerData.ValueProvider">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Triggers.TriggerData.BindingData">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.CompositeTraceWriter">
            <summary>
            This <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> delegates to an inner <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> and <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.ConsoleTraceWriter">
            <summary>
            This <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/> delegates to a collection of inner user <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>s (from <see cref="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Tracing"/>,
            as well as a Console <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.IExtensionRegistryExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.Azure.WebJobs.Host.IExtensionRegistry"/>./>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistryExtensions.RegisterBindingRules``1(Microsoft.Azure.WebJobs.Host.IExtensionRegistry,Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider[])">
            <summary>
            Register a set of binding rules for a given type. The rules are applied in order, first one wins.  
            An catch-all error binding is automatically placed at the end that will raise a binding error if no binder claims it. 
            </summary>
            <param name="registry">The registry instance.</param>
            <param name="bindingProviders">binding rules for a parameter.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistryExtensions.RegisterBindingRules``1(Microsoft.Azure.WebJobs.Host.IExtensionRegistry,System.Action{``0,System.Type},Microsoft.Azure.WebJobs.INameResolver,Microsoft.Azure.WebJobs.Host.Bindings.IBindingProvider[])">
            <summary>
            Register a set of binding rules for a given type. The rules are applied in order, first one wins.  
            An catch-all error binding is automatically placed at the end that will raise a binding error if no binder claims it. 
            </summary>
            <param name="registry">The registry instance.</param>
            <param name="validator">Validator function to be called at indexing time for catching upfront errors. </param>
            <param name="nameResolver">NameResolver to pass to validator.</param>
            <param name="bindingProviders">binding rules for a parameter.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistryExtensions.RegisterExtension``1(Microsoft.Azure.WebJobs.Host.IExtensionRegistry,``0)">
            <summary>
            Registers the specified instance. 
            </summary>
            <typeparam name="TExtension">The service type to register the instance for.</typeparam>
            <param name="registry">The registry instance.</param>
            <param name="extension">The instance to register.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistryExtensions.GetExtensions``1(Microsoft.Azure.WebJobs.Host.IExtensionRegistry)">
            <summary>
            Returns the collection of extension instances registered for the specified type.
            </summary>
            <typeparam name="TExtension">The service type to get extensions for.</typeparam>
            <param name="registry">The registry instance.</param>
            <returns>The collection of extension instances.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistryExtensions.GetExtensionAssemblies(Microsoft.Azure.WebJobs.Host.IExtensionRegistry)">
            <summary>
            Returns the set of assemblies that have registered extensions.
            </summary>
            <param name="registry">The registry instance.</param>
            <returns>The unique set of assemblies.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.IExtensionRegistry">
            <summary>
            Provides methods for registering 3rd party extensions (e.g. bindings).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistry.RegisterExtension(System.Type,System.Object)">
            <summary>
            Registers the specified instance.
            </summary>
            <param name="type">The service type to register the instance for.</param>
            <param name="instance">The instance to register.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IExtensionRegistry.GetExtensions(System.Type)">
            <summary>
            Returns the collection of extension instances registered for the specified type.
            </summary>
            <param name="type">The extension type to return instances for.</param>
            <returns>The collection of extension instances.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.IJobActivator">
            <summary>Defines an activator that creates an instance of a job type.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IJobActivator.CreateInstance``1">
            <summary>Creates a new instance of a job type.</summary>
            <typeparam name="T">The job type.</typeparam>
            <returns>A new instance of the job type.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Indexers.FunctionIndexingException">
            <summary>
            Exception that occurs when the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> encounters errors when trying
            to index job methods on startup.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Indexers.FunctionIndexingException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="methodName">The name of the method in error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Indexers.FunctionIndexingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Indexers.FunctionIndexingException.MethodName">
            <summary>
            The name of the method in error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Indexers.FunctionIndexingException.Handled">
            <summary>
            Gets or sets a value indicating whether the exception should be treated
            as handled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Indexers.FunctionIndexingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.JobHostTraceConfiguration">
            <summary>
            Configuration class containing settings related to event tracing.
            <see cref="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Tracing"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.JobHostTraceConfiguration.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostTraceConfiguration.ConsoleLevel">
            <summary>
            Gets or sets the <see cref="T:System.Diagnostics.TraceLevel"/> for console output.
            The default is <see cref="F:System.Diagnostics.TraceLevel.Info"/>.
            </summary>
            <remarks>
            For local debugging it can be useful to increase the level to <see cref="F:System.Diagnostics.TraceLevel.Verbose"/>
            to get more details, however you shouldn't run in production that way because too much output
            will be produced.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostTraceConfiguration.Tracers">
            <summary>
            Gets the collection of <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>s that the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> will
            trace events to. 
            <remarks>
            When <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>s are added to this collection, in addition to the default
            Dashboard/Console event logging that is done, those events will also be routed through these
            <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>s. This would allow you to intercept the events that are written
            to the Dashboard/Console, so you can persist/inspect as needed.
            </remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Listeners.ISharedContextProvider">
            <summary>
            Interface for providing host level state persistence.
            A new instance of the provider is created when a host
            is constructed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext">
            <summary>
            Context object used passed to <see cref="M:Microsoft.Azure.WebJobs.Host.Triggers.ITriggerBinding.CreateListenerAsync(Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext.#ctor(Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor,Microsoft.Azure.WebJobs.Host.Executors.ITriggeredFunctionExecutor,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor"/> to create a listener for.</param>
            <param name="executor">The <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.ITriggeredFunctionExecutor"/> that should be used to invoke the
            target job function when the trigger fires.</param>
            <param name="cancellationToken">The <see cref="P:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext.CancellationToken"/> to use.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext.Descriptor">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.WebJobs.Host.Protocols.FunctionDescriptor"/> to create a listener for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext.Executor">
            <summary>
            Gets the <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.ITriggeredFunctionExecutor"/> that should be used to invoke the
            target job function when the trigger fires.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext.CancellationToken">
            <summary>
            Gets the <see cref="P:Microsoft.Azure.WebJobs.Host.Listeners.ListenerFactoryContext.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Listeners.IListener">
            <summary>
            Defines an interface for listening to external event sources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Listeners.IListener.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start listening.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use.</param>
            <returns>A task that completes when the listener is fully started.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Listeners.IListener.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stop listening.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use.</param>
            <returns>A task that completes when the listener has stopped.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Listeners.IListener.Cancel">
            <summary>
            Cancel any in progress listen operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Listeners.IListenerFactory">
            <summary>
            Interface defining methods used to create <see cref="T:Microsoft.Azure.WebJobs.Host.Listeners.IListener"/>s for
            trigger parameter bindings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Listeners.IListenerFactory.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a listener.
            </summary>
            <param name="token">A <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>The listener.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry">
            <summary>    
            Represent a function invocation starting or finishing. 
            A host can register an IAsyncCollector on the JobHostConfiguration to receive these notifications to do their own logging. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.MaxLogOutputLength">
            <summary>
            Maximum length of LogOutput that will be captured. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.FunctionInstanceId">
            <summary>Gets or sets the function instance ID.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.ParentId">
            <summary>The parent instance that caused this function instance to run. this is used to establish causality between functions. </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.FunctionName">
            <summary>The name of the function. This serves as an identifier.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.TriggerReason">
            <summary>
            An optional hint about why this function was invoked. It may have been triggered, replayed, manually invoked, etc. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.StartTime">
            <summary>The time the function started executing.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.EndTime">
            <summary>An optional value for when the function finished executing. If not set, then the function hasn't completed yet. </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.ErrorDetails">
            <summary>
            Null on success.
            Else, set to some string with error details. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.Arguments">
            <summary>Gets or sets the function's argument values and help strings.</summary>        
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Loggers.FunctionInstanceLogEntry.LogOutput">
            <summary>Direct inline capture for output written to the per-function instance TextWriter log. 
            For large log outputs, this is truncated</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.SingletonConfiguration">
            <summary>
            Configuration options governing the lock functionality of <see cref="T:Microsoft.Azure.WebJobs.SingletonAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.LockPeriod">
            <summary>
            Gets or sets the default duration of <see cref="F:Microsoft.Azure.WebJobs.SingletonMode.Function"/> locks.
            As this period nears expiry, the lock will be automatically renewed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.ListenerLockPeriod">
            <summary>
            Gets or sets the default duration of <see cref="F:Microsoft.Azure.WebJobs.SingletonMode.Listener"/> locks.
            As this period nears expiry, the lock will be automatically renewed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.LockAcquisitionTimeout">
            <summary>
            Gets or sets the timeout value for lock acquisition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.LockAcquisitionPollingInterval">
            <summary>
            Gets or sets the polling interval governing how often retries are made
            when waiting to acquire a lock. The system will retry on this interval
            until the <see cref="P:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.LockAcquisitionTimeout"/> is exceeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonConfiguration.ListenerLockRecoveryPollingInterval">
            <summary>
            Gets or sets the polling interval used by <see cref="F:Microsoft.Azure.WebJobs.SingletonMode.Listener"/> locks
            to acquire their lock if they failed to acquire it on startup.
            </summary>
            <remarks>
            On startup, singleton listeners for triggered functions make a single attempt to acquire
            their locks. If unable to acquire the lock (e.g. if another instance has it) the listener
            won't start (and the triggered function won't be running). However, the listener will
            periodically reattempt to acquire the lock based on this value. To disable this behavior
            set the value to <see cref="F:System.TimeSpan.MaxValue"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.SingletonLock">
            <summary>
            This class implements a singleton lock for a particular function instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonLock.Id">
            <summary>
            The singleton lock ID
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonLock.FunctionId">
            <summary>
            The function instance ID that this lock is for
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonLock.AcquireStartTime">
            <summary>
            Gets the time when the lock acquisition began.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonLock.AcquireEndTime">
            <summary>
            Gets the time when the lock acquisition completed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonLock.ReleaseTime">
            <summary>
            Gets the time when the lock was released.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.SingletonLock.IsHeld">
            <summary>
            Gets a value indicating whether the lock has been acquired and
            is currently held.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.SingletonLock.AcquireAsync(System.Threading.CancellationToken)">
            <summary>
            Acquire the singleton lock. If the lock cannot be acquired within the configured timeout,
            an exception will be thrown.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.SingletonLock.ReleaseAsync(System.Threading.CancellationToken)">
            <summary>
            Release the lock.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.SingletonLock.GetOwnerAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the current owner of the singleton lock.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.SingletonManager">
            <summary>
            Encapsulates and manages blob leases for Singleton locks.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.SingletonManager.CreateHostSingletonListener(Microsoft.Azure.WebJobs.Host.Listeners.IListener,System.String)">
            <summary>
            Creates and returns singleton listener scoped to the host.
            </summary>
            <param name="innerListener">The inner listener to wrap.</param>
            <param name="scopeId">The scope ID to use.</param>
            <returns>The singleton listener.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.SingletonValueProvider">
            <summary>
            <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.IValueProvider"/> implementation for "virtual" singleton parameters.
            When <see cref="T:Microsoft.Azure.WebJobs.SingletonAttribute"/> is applied to a function, 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.SingletonValueProvider.SingletonWatcher">
            <summary>
            This watcher provides detailed information about the current status of the
            lock for a function instance.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.StorageClientFactory">
            <summary>
            Factory class for all Azure Storage clients used by by a <see cref="T:Microsoft.Azure.WebJobs.JobHost"/>.
            </summary>
            <remarks>
            Subclasses can override the various methods to customize client creation.
            See <see cref="P:Microsoft.Azure.WebJobs.JobHostConfiguration.StorageClientFactory"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.StorageClientFactory.CreateCloudBlobClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <summary>
            Creates a <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient"/> instance for the specified <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext"/>.</param>
            <returns>The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.StorageClientFactory.CreateCloudTableClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <summary>
            Creates a <see cref="T:Microsoft.WindowsAzure.Storage.Table.CloudTableClient"/> instance for the specified <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext"/>.</param>
            <returns>The <see cref="T:Microsoft.WindowsAzure.Storage.Table.CloudTableClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.StorageClientFactory.CreateCloudQueueClient(Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext)">
            <summary>
            Creates a <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient"/> instance for the specified <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext"/>.</param>
            <returns>The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext">
            <summary>
            Class providing context information for calls to <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext.Account">
            <summary>
            Gets or sets the <see cref="T:Microsoft.WindowsAzure.Storage.CloudStorageAccount"/> to create a client for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.StorageClientFactoryContext.Parameter">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.ParameterInfo"/> for the parameter
            binding to create a client for, if the client is being created
            for a binding. May be null.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Converters.AsyncConverter`2">
            <summary>
            An asynchronous converter that delegates to an inner synchronous converter.
            </summary>
            <typeparam name="TInput">The type to convert from.</typeparam>
            <typeparam name="TOutput">The type to convert to.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.AsyncConverter`2.#ctor(Microsoft.Azure.WebJobs.IConverter{`0,`1})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="innerConverter">The inner converter to delegate to.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.AsyncConverter`2.ConvertAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Converters.ConversionResult`1">
            <summary>
            Represents the result of a conversion.
            </summary>
            <typeparam name="TResult">The <see cref="T:System.Type"/> of the conversion result.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Converters.ConversionResult`1.Succeeded">
            <summary>
            Gets a value indicating whether the conversion succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Converters.ConversionResult`1.Result">
            <summary>
            Gets the conversion result.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Converters.IAsyncObjectToTypeConverter`1">
            <summary>
            Provides an interface for performing asynchronous conversions from
            an object to a particular type.
            </summary>
            <typeparam name="TOutput">The type to convert to.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.IAsyncObjectToTypeConverter`1.TryConvertAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Try to convert the specified input object.
            </summary>
            <param name="input">The object to convert.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use.</param>
            <returns>A task that returns the conversion result.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Converters.IdentityConverter`1">
            <summary>
            A converter that simply returns the value to be converted,
            without performing any conversions.
            </summary>
            <typeparam name="TValue">The <see cref="T:System.Type"/> being converted.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.IdentityConverter`1.Convert(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Converters.CompositeObjectToTypeConverter`1">
            <summary>
            An object converter that encapsulates a set of inner converters.
            </summary>
            <typeparam name="T">The output <see cref="T:System.Type"/></typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.CompositeObjectToTypeConverter`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Host.Converters.IObjectToTypeConverter{`0}})">
            <summary>
            Create a new instance.
            </summary>
            <param name="converters">The set of converters to encapsulate.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.CompositeObjectToTypeConverter`1.#ctor(Microsoft.Azure.WebJobs.Host.Converters.IObjectToTypeConverter{`0}[])">
            <summary>
            Create a new instance.
            </summary>
            <param name="converters">The set of converters to encapsulate.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.CompositeObjectToTypeConverter`1.TryConvert(System.Object,`0@)">
            <summary>
            Try to perform a conversion by attempting each inner converter in order
            until one succeeds, or all fail.
            </summary>
            <param name="input">The value to convert.</param>
            <param name="output">The converted value if successful.</param>
            <returns>True if the conversion was successful, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Converters.IObjectToTypeConverter`1">
            <summary>
            Defines methods for converting objects to another <see cref="T:System.Type"/>.
            </summary>
            <typeparam name="TOutput">The output <see cref="T:System.Type"/>.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Converters.IObjectToTypeConverter`1.TryConvert(System.Object,`0@)">
            <summary>
            Try to convert the specified object to the output <see cref="T:System.Type"/>.
            </summary>
            <param name="input">The object to convert.</param>
            <param name="output">If the conversion was successful, the result of the conversion.</param>
            <returns>True if the conversion was successful, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration">
            <summary>
            Represents configuration for <see cref="T:Microsoft.Azure.WebJobs.QueueTriggerAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.BatchSize">
            <summary>
            Gets or sets the number of queue messages to retrieve and process in parallel (per job method).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.NewBatchThreshold">
            <summary>
            Gets or sets the threshold at which a new batch of messages will be fetched.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.MaxPollingInterval">
            <summary>
            Gets or sets the longest period of time to wait before checking for a message to arrive when a queue remains
            empty.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.MaxDequeueCount">
            <summary>
            Gets or sets the number of times to try processing a message before moving it to the poison queue (where
            possible).
            </summary>
            <remarks>
            Some queues do not have corresponding poison queues, and this property does not apply to them. Specifically,
            there are no corresponding poison queues for any queue whose name already ends in "-poison" or any queue
            whose name is already too long to add a "-poison" suffix.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.VisibilityTimeout">
            <summary>
            Gets or sets the default message visibility timeout that will be used
            for messages that fail processing. The default is TimeSpan.Zero. To increase
            the time delay between retries, increase this value.
            </summary>
            <remarks>
            When message processing fails, the message will remain in the queue and
            its visibility will be updated with this value. The message will then be
            available for reprocessing after this timeout expires.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.JobHostQueuesConfiguration.QueueProcessorFactory">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory"/> that will be used to create
            <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor"/> instances that will be used to process messages.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Timers.WebJobsExceptionHandler">
            <summary>
            Default implementation for <see cref="T:Microsoft.Azure.WebJobs.Host.Timers.IWebJobsExceptionHandler"/>. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.WebJobsExceptionHandler.Initialize(Microsoft.Azure.WebJobs.JobHost)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.WebJobsExceptionHandler.OnTimeoutExceptionAsync(System.Runtime.ExceptionServices.ExceptionDispatchInfo,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.WebJobsExceptionHandler.OnUnhandledExceptionAsync(System.Runtime.ExceptionServices.ExceptionDispatchInfo)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Timers.IWebJobsExceptionHandler">
            <summary>
            Represents an unhandled exception handler.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.IWebJobsExceptionHandler.Initialize(Microsoft.Azure.WebJobs.JobHost)">
            <summary>
            Called during host creation. Allows a reference to the host.
            </summary>
            <param name="host">The JobHost.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.IWebJobsExceptionHandler.OnTimeoutExceptionAsync(System.Runtime.ExceptionServices.ExceptionDispatchInfo,System.TimeSpan)">
            <summary>
            Called when a timeout occurs.
            </summary>
            <returns>A Task.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.IWebJobsExceptionHandler.OnUnhandledExceptionAsync(System.Runtime.ExceptionServices.ExceptionDispatchInfo)">
            <summary>
            Implement this method to handle an unhandled exception.
            </summary>
            <param name="exceptionInfo">The <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo"/>.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Timers.IRecurrentCommand">
            <summary>Defines a recurring command that may fail gracefully.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.Timers.IRecurrentCommand.TryExecuteAsync(System.Threading.CancellationToken)">
            <summary>Attempts to execute the command.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that will execute the command. The task's result is <see langword="false"/> if the
            command fails gracefully; otherwise <see langword="true"/>.
            </returns>
            <remarks>
            The task completes successfully with a <see langword="false"/> result rather than faulting to indicate a
            graceful failure.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.Timers.TaskSeriesCommandResult.Wait">
            <summary>
            Wait for this task to complete before calling <see cref="M:Microsoft.Azure.WebJobs.Host.Timers.ITaskSeriesCommand.ExecuteAsync(System.Threading.CancellationToken)"/> again.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.Timers.TaskSeriesTimer">
            <summary>Represents a timer that executes one task after another in a series.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.TraceEvent">
            <summary>
            Defines a trace event that can be written to a <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceEvent.#ctor(System.Diagnostics.TraceLevel,System.String,System.String,System.Exception)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="level">The level of the trace.</param>
            <param name="message">The trace message.</param>
            <param name="source">The source of the trace (may be null).</param>
            <param name="exception">The exception that caused the trace (may be null).</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceEvent.Timestamp">
            <summary>
            The time the trace was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceEvent.Level">
            <summary>
            The level of the trace.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceEvent.Source">
            <summary>
            The source of the trace.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceEvent.Message">
            <summary>
            The trace message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceEvent.Exception">
            <summary>
            The exception that caused the trace.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceEvent.Properties">
            <summary>
            Gets a set of properties for the <see cref="T:Microsoft.Azure.WebJobs.Host.TraceEvent"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceEvent.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.TraceSource">
            <summary>
            Enumeration of the internal SDK trace sources used when logging
            to <see cref="T:Microsoft.Azure.WebJobs.Host.TraceWriter"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.TraceSource.Indexing">
            <summary>
            Trace message coming from function indexing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.TraceSource.Host">
            <summary>
            Trace message coming from <see cref="T:Microsoft.Azure.WebJobs.JobHost"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Host.TraceSource.Execution">
            <summary>
            Trace message coming from function execution.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.TraceWriter">
            <summary>
            Base class for trace writers used by the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> for
            event tracing. See <see cref="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Tracing"/> for details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.#ctor(System.Diagnostics.TraceLevel)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel"/> used to filter trace events.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.TraceWriter.Level">
            <summary>
            Gets or sets the <see cref="T:System.Diagnostics.TraceLevel"/> filter used to filter trace events.
            Only trace events with a <see cref="T:System.Diagnostics.TraceLevel"/> less than or equal to
            this level will be traced.
            <remarks>
            Level filtering will be done externally by the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/>, so
            it shouldn't be done by this class.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.Trace(Microsoft.Azure.WebJobs.Host.TraceEvent)">
            <summary>
            Writes a trace event.
            </summary>
            <param name="traceEvent">The <see cref="T:Microsoft.Azure.WebJobs.Host.TraceEvent"/> to trace.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.Verbose(System.String,System.String)">
            <summary>
            Writes a <see cref="F:System.Diagnostics.TraceLevel.Verbose"/> level trace event.
            </summary>
            <param name="message">The trace message.</param>
            <param name="source">The source of the message.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.Info(System.String,System.String)">
            <summary>
            Writes a <see cref="F:System.Diagnostics.TraceLevel.Info"/> level trace event.
            </summary>
            <param name="message">The trace message.</param>
            <param name="source">The source of the message.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.Warning(System.String,System.String)">
            <summary>
            Writes a <see cref="F:System.Diagnostics.TraceLevel.Warning"/> level trace event.
            </summary>
            <param name="message">The trace message.</param>
            <param name="source">The source of the message.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.Error(System.String,System.Exception,System.String)">
            <summary>
            Writes a <see cref="F:System.Diagnostics.TraceLevel.Error"/> level trace event.
            </summary>
            <param name="message">The trace message.</param>
            <param name="ex">The optional <see cref="T:System.Exception"/> for the error.</param>
            <param name="source">The source of the message.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TraceWriter.Flush">
            <summary>
            Flush any buffered trace events.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.PropertyHelper">
            <summary>
            Class used to facilitate reflection operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast property helper. This constructor does not cache the helper.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.PropertyHelper.Name">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.PropertyHelper.PropertyType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the property.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.PropertyHelper.GetValue(System.Object)">
            <summary>
            Gets the value of the property for the specified instance.
            </summary>
            <param name="instance">The instance to return the property value for.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of this instance.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.PropertyHelper.GetProperties(System.Type)">
            <summary>
            Returns a collection of <see cref="T:Microsoft.Azure.WebJobs.Host.PropertyHelper"/>s for the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The type to return <see cref="T:Microsoft.Azure.WebJobs.Host.PropertyHelper"/>s for.</param>
            <returns>A collection of <see cref="T:Microsoft.Azure.WebJobs.Host.PropertyHelper"/>s.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.PropertyHelper.MakeFastPropertySetter``1(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter. The result is not cached.
            </summary>
            <param name="property">The property to extract the getter for.</param>
            <returns>a fast setter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.HostQueueNames.GetHostBlobTriggerQueueName(System.String)">
            <summary>Gets the shared host blob trigger queue name.</summary>
            <param name="hostId">The host ID.</param>
            <returns>The shared host blob trigger queue name.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.HostQueueNames.GetHostQueueName(System.String)">
            <summary>Gets the host instance queue name.</summary>
            <param name="hostId">The host ID.</param>
            <returns>The host instance queue name.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.NameResolverExtensions">
            <summary>
            Contains extension methods for INameResolver.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.NameResolverExtensions.TryResolveWholeString(Microsoft.Azure.WebJobs.INameResolver,System.String,System.String@)">
            <summary>
            Attempt to resolve all %% matches within a string.
            </summary>
            <param name="resolver">resolver to apply to each name</param>
            <param name="resolve">the input string. IE, "start%name1%...%name2%end"</param>
            <param name="result">The resolved string</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.NameResolverExtensions.ResolveWholeString(Microsoft.Azure.WebJobs.INameResolver,System.String)">
            <summary>
            Resolve all %% matches within a string.
            </summary>
            <param name="resolver">resolver to apply to each name</param>
            <param name="resolve">the input string. IE, "start%name1%...%name2%end"</param>
            <returns>The resolved string</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.FunctionInvocationException">
            <summary>
            Exception thrown when a job function invocation fails.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.#ctor(System.String,System.Guid,System.String,System.Exception)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="message">The exception message.</param>
            <param name="instanceId">The function instance Id.</param>
            <param name="methodName">The fully qualified method name.</param>
            <param name="innerException">The exception that is the cause of the current exception (or null).</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.InstanceId">
            <summary>
            Gets the instance Id of the failed invocation. This value can be correlated
            to the Dashboard logs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.MethodName">
            <summary>
            Gets the fully qualified name of the function.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.FunctionInvocationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TypeUtility.GetHierarchicalAttributeOrNull``1(System.Reflection.ParameterInfo)">
            <summary>
            Walk from the parameter up to the containing type, looking for an instance
            of the specified attribute type, returning it if found.
            </summary>
            <param name="parameter">The parameter to check.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.TypeUtility.GetHierarchicalAttributeOrNull``1(System.Reflection.MethodInfo)">
            <summary>
            Walk from the method up to the containing type, looking for an instance
            of the specified attribute type, returning it if found.
            </summary>
            <param name="method">The method to check.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.AmbientConnectionStringProvider">
            <summary>
            Connection string provider that reads from configuration first, and if a connection
            is not found there, will search in environment variables.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Host.AmbientConnectionStringProvider.Instance">
            <summary>
            Gets the singleton instance.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.AmbientConnectionStringProvider.GetConnectionString(System.String)">
            <summary>
            Attempts to first read a connection string from the connectionStrings configuration section.
            If not found there, it will attempt to read from environment variables.
            </summary>
            <param name="connectionStringName">The name of the connection string to look up.</param>
            <returns>The connection string, or <see langword="null"/> if no connection string was found.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Host.IConnectionStringProvider">
            <summary>
            Defines an interface for providing connection strings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Host.IConnectionStringProvider.GetConnectionString(System.String)">
            <summary>
            Get the connection string for the specified name.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <returns>The connection string if found.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.DefaultResolutionPolicy">
            <summary>
            Resolution policy for { } in  binding templates. 
            The default policy is just a direct substitution for the binding data. 
            Derived policies can enforce formatting / escaping when they do injection. 
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Binder">
            <summary>
            Class providing functionality for dynamically binding to WebJobs SDK attributes at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.#ctor">
            <summary>
            For testing only.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.#ctor(Microsoft.Azure.WebJobs.Host.Bindings.Runtime.IAttributeBindingSource)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="bindingSource">The binding source.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Binder.BindingData">
            <summary>
            Gets the binding data.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.BindAsync``1(System.Attribute,System.Threading.CancellationToken)">
            <summary>
            Binds the specified attribute.
            </summary>
            <typeparam name="TValue">The type to bind to.</typeparam>
            <param name="attribute">The attribute to bind.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will provide the bound the value.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.BindAsync``1(System.Attribute[],System.Threading.CancellationToken)">
            <summary>
            Binds the specified collection of attributes.
            </summary>
            <typeparam name="TValue">The type to bind to.</typeparam>
            <param name="attributes">The collection of attributes to bind. The first attribute in the
            collection should be the primary attribute.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.Complete(System.Threading.CancellationToken)">
            <summary>
            Called to complete the binding process.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Binder.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.DefaultNameResolver">
            <summary>
            An implementation of <see cref="T:Microsoft.Azure.WebJobs.INameResolver"/> that resolves tokens by looking first
            in App Settings and then in environment variables.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.DefaultNameResolver.Resolve(System.String)">
            <summary>
            Resolves tokens by looking first in App Settings and then in environment variables.
            </summary>
            <param name="name">The token to resolve.</param>
            <returns>The token value from App Settings or environment variables. If the token is not found, null is returned.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.FuncConverter`3">
            <summary>
            Converter function to use with <see cref="T:Microsoft.Azure.WebJobs.IConverterManager"/>
            </summary>
            <typeparam name="TSource">source to convert from</typeparam>
            <typeparam name="TAttribute">attribute on the binding. This may have parameter that influence conversion.</typeparam>
            <typeparam name="TDestination">destination type to convert to. </typeparam>
            <param name="src">source</param>
            <param name="attribute">attribute</param>
            <param name="context">binding context that may have additional parameters to influence conversion. </param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.IConverterManager">
            <summary>
            General service for converting between types for parameter bindings.  
            Parameter bindings call this to convert from user parameter types to underlying binding types. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManager.GetConverter``3">
            <summary>
            Get a conversion function to converter from the source to the destination type. 
            This will either return a converter directly supplied by AddConverter or a composition of converters:
            1. Exact Match: If there is a TSource-->TDestination converter, return that. 
            2. Catch-all: If there is an object-->TDestination converter, return that. 
            3. Inheritance : if TSource is assignable to TDestination (such as inheritance or if the types are the same), do the automatic conversion. 
            4. byte[]:  if there is a Byte[] --> string, and String--> TDestination, compose them to do Byte[]-->String
            5. Poco with Json: if TSource is a poco, serialize it to a string and use string-->TDestination. 
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <typeparam name="TAttribute">Attribute on the binding. </typeparam>
            <returns>a converter function; or null if no converter is available.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManager.AddConverter``3(Microsoft.Azure.WebJobs.FuncConverter{``0,``2,``1})">
            <summary>
            Add a converter function which can then be retrieved by GetConverter. 
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <typeparam name="TAttribute">Attribute on the binding. </typeparam>
            <param name="converter">the converter function for this combination of type parameters.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManager.AddConverter``3(System.Func{System.Type,System.Type,System.Func{System.Object,System.Object}})">
            <summary>
            Add a builder function that returns a converter. This can use <see cref="T:Microsoft.Azure.WebJobs.Host.Bindings.OpenType"/>  to match against an 
            open set of types. The builder can then do one time static type checking and code gen caching before
            returning a converter function that is called on each invocation. 
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <typeparam name="TAttribute">Attribute on the binding. </typeparam>
            <param name="converterBuilder">A function that is invoked if-and-only-if there is a compatible type match for the 
            source and destination types. It then produce a converter function that can be called many times </param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.IConverterManagerExtensions">
            <summary>
            Convenience methods for <see cref="T:Microsoft.Azure.WebJobs.IConverterManager"/>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManagerExtensions.AddConverter``2(Microsoft.Azure.WebJobs.IConverterManager,System.Func{``0,``1})">
            <summary>
            Register a new converter function that applies for all attributes. 
            If TSource is object, then this converter is applied to any attempt to convert to TDestination. 
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <param name="converterManager"></param>
            <param name="converter">A function to convert from the source to the destination type.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManagerExtensions.AddConverter``3(Microsoft.Azure.WebJobs.IConverterManager,System.Func{``0,``2,``1})">
            <summary>
            Register a new converter function that is influenced by the attribute. 
            If TSource is object, then this converter is applied to any attempt to convert to TDestination. 
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <typeparam name="TAttribute">Attribute on the binding. </typeparam>
            <param name="converterManager"></param>
            <param name="converter">A function to convert from the source to the destination type.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManagerExtensions.AddConverter``3(Microsoft.Azure.WebJobs.IConverterManager,System.Type,System.Object[])">
            <summary>
            Add a converter for the given Source to Destination conversion.
            The typeConverter type is instantiated with the type arguments and constructorArgs is passed. 
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <typeparam name="TAttribute">Attribute on the binding. </typeparam>
            <param name="converterManager">Instance of Converter Manager.</param>
            <param name="typeConverter">A type with conversion methods. This can be generic and will get instantiated with the 
            appropriate type parameters. </param>
            <param name="constructorArgs">Constructor Arguments to pass to the constructor when instantiated. This can pass configuration and state.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverterManagerExtensions.AddConverter``3(Microsoft.Azure.WebJobs.IConverterManager,System.Object)">
            <summary>
            Add a converter for the given Source to Destination conversion.
            </summary>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Destination type.</typeparam>
            <typeparam name="TAttribute">Attribute on the binding. </typeparam>
            <param name="converterManager">Instance of Converter Manager.</param>
            <param name="converterInstance">Instance of an object with convert methods on it.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.ConnectionStringNames">
            <summary>Defines connection string names used by <see cref="T:Microsoft.Azure.WebJobs.Host.IConnectionStringProvider"/>.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.ConnectionStringNames.Dashboard">
            <summary>Gets the dashboard connection string name.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.ConnectionStringNames.Storage">
            <summary>Gets the Azure Storage connection string name.</summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.ConnectionStringNames.ServiceBus">
            <summary>Gets the Azure ServiceBus connection string name.</summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.IAsyncConverter`2">
            <summary>
            Interface defining methods for performing asynchronous conversion operations.
            </summary>
            <typeparam name="TInput">The type to convert from.</typeparam>
            <typeparam name="TOutput">The type to convert to.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IAsyncConverter`2.ConvertAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Convert the specified input value to the output type.
            </summary>
            <param name="input">The value to convert.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use</param>
            <returns>A task that returns the converted value.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.IConverter`2">
            <summary>
            Defines methods for performing value conversions
            </summary>
            <typeparam name="TInput">The input value type.</typeparam>
            <typeparam name="TOutput">The output value type.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.IConverter`2.Convert(`0)">
            <summary>
            Convert the specified input value.
            </summary>
            <param name="input">The value to convert</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.WebJobsShutdownWatcher">
            <summary>
            Helper class for providing a cancellation token for when this WebJob's shutdown is signaled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.WebJobsShutdownWatcher.#ctor">
            <summary>
            Begin watching for a shutdown notification from Antares.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.WebJobsShutdownWatcher.Token">
            <summary>
            Get a CancellationToken that is signaled when the shutdown notification is detected.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.WebJobsShutdownWatcher.Dispose">
            <summary>
            Stop watching for the shutdown notification
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.INameResolver">
            <summary>Defines a resolver for %name% variables in attribute values.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.INameResolver.Resolve(System.String)">
            <summary>
            Resolve a %name% to a value. Resolution is not recursive.
            </summary>
            <param name="name">The name to resolve (without the %... %)</param>
            <returns>The value to which the name resolves, if the name is supported; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.JobHostConfiguration">
            <summary>
            Represents the configuration settings for a <see cref="T:Microsoft.Azure.WebJobs.JobHost"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.JobHostConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.JobHostConfiguration"/> class, using the
            specified connection string for both reading and writing data as well as Dashboard logging.
            </summary>
            <param name="dashboardAndStorageConnectionString">The Azure Storage connection string to use.
            </param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.IsDevelopment">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> is running in a Development environment.
            You can use this property in conjunction with <see cref="M:Microsoft.Azure.WebJobs.JobHostConfiguration.UseDevelopmentSettings"/> to default
            configuration settings to values optimized for local development.
            <Remarks>
            The environment is determined by the value of the "AzureWebJobsEnv" environment variable. When this
            is set to "Development", this property will return true.
            </Remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.UsingDevelopmentSettings">
            <summary>
            Returns true if <see cref="M:Microsoft.Azure.WebJobs.JobHostConfiguration.UseDevelopmentSettings"/> has been called on this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.HostId">
            <summary>Gets or sets the host ID.</summary>
            <remarks>
            <para>
            All host instances that share the same host ID must be homogeneous. For example, they must use the same
            storage accounts and have the same list of functions. Host instances with the same host ID will scale out
            and share handling of work such as BlobTrigger and run from dashboard processing and providing a heartbeat
            to the dashboard indicating that an instance of the host running.
            </para>
            <para>
            If this value is <see langword="null"/> on startup, a host ID will automatically be generated based on the assembly
            name of the first function, and that host ID will be made available via this property after the host has fully started.
            </para>
            <para>
            If non-homogeneous host instances share the same first function assembly,
            this property must be set explicitly; otherwise, the host instances will incorrectly try to share work as if
            they were homogeneous.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.JobActivator">
            <summary>Gets or sets the job activator.</summary>
            <remarks>The job activator creates instances of job classes when calling instance methods.</remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.DashboardConnectionString">
            <summary>
            Gets or sets the Azure Storage connection string used for logging and diagnostics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.StorageConnectionString">
            <summary>
            Gets or sets the Azure Storage connection string used for reading and writing data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.TypeLocator">
            <summary>Gets or sets the type locator.</summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.NameResolver">
            <summary>
            Gets or sets the name resolver used during indexing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.ConverterManager">
            <summary>
            Get the converter manager, which can be used to register additional conversions for 
            customizing model binding. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.BindingFactory">
            <summary>
            Gets a helper object for constructing common binding rules for extensions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Queues">
            <summary>
            Gets the configuration used by <see cref="T:Microsoft.Azure.WebJobs.QueueTriggerAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Blobs">
            <summary>
            Gets the configuration used by <see cref="T:Microsoft.Azure.WebJobs.BlobTriggerAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Singleton">
            <summary>
            Gets the configuration used by <see cref="T:Microsoft.Azure.WebJobs.SingletonAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.Tracing">
            <summary>
            Gets the configuration for event tracing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.JobHostConfiguration.StorageClientFactory">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.WebJobs.Host.StorageClientFactory"/> that will be used to create
            Azure Storage clients.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.UseDevelopmentSettings">
            <summary>
            Configures various configuration settings on this <see cref="T:Microsoft.Azure.WebJobs.JobHostConfiguration"/> to
            optimize for local development.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.GetService(System.Type)">
            <summary>Gets the service object of the specified type.</summary>
            <param name="serviceType">The type of service to get.</param>
            <returns>
            A service of the specified type, if one is available; otherwise, <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.GetService``1">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <typeparam name="TService">The type of service object to get.</typeparam>
            <returns>A service of the specified type, if one is available; otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.AddService(System.Type,System.Object)">
            <summary>
            Adds the specified service instance, replacing any existing service.
            </summary>
            <param name="serviceType">The service type</param>
            <param name="serviceInstance">The service instance</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHostConfiguration.AddService``1(``0)">
            <summary>
            Adds the specified service instance, replacing any existing service.
            </summary>
            <typeparam name="TService">The service type</typeparam>
            <param name="serviceInstance">The service instance</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.JobHost">
            <summary>
            A <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> is the execution container for jobs. Once started, the
            <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> will manage and run job functions when they are triggered.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> class, using a Microsoft Azure Storage connection
            string located in the connectionStrings section of the configuration file or in environment variables.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.#ctor(Microsoft.Azure.WebJobs.JobHostConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> class using the configuration provided.
            </summary>
            <param name="configuration">The job host configuration.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> class using the service provider provided.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Start">
            <summary>Starts the host.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.StartAsync(System.Threading.CancellationToken)">
            <summary>Starts the host.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will start the host.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Stop">
            <summary>Stops the host.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.StopAsync">
            <summary>Stops the host.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will stop the host.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.RunAndBlock">
            <summary>Runs the host and blocks the current thread while the host remains running.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Call(System.Reflection.MethodInfo)">
            <summary>Calls a job method.</summary>
            <param name="method">The job method to call.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Call(System.Reflection.MethodInfo,System.Object)">
            <summary>Calls a job method.</summary>
            <param name="method">The job method to call.</param>
            <param name="arguments">
            An object with public properties representing argument names and values to bind to parameters in the job
            method. In addition to parameter values, these may also include binding data values.
            </param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Call(System.Reflection.MethodInfo,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Calls a job method.</summary>
            <param name="method">The job method to call.</param>
            <param name="arguments">The argument names and values to bind to parameters in the job method.
            In addition to parameter values, these may also include binding data values. </param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.CallAsync(System.Reflection.MethodInfo,System.Threading.CancellationToken)">
            <summary>Calls a job method.</summary>
            <param name="method">The job method to call.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will call the job method.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.CallAsync(System.Reflection.MethodInfo,System.Object,System.Threading.CancellationToken)">
            <summary>Calls a job method.</summary>
            <param name="method">The job method to call.</param>
            <param name="arguments">
            An object with public properties representing argument names and values to bind to parameters in the job
            method. In addition to parameter values, these may also include binding data values. 
            </param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will call the job method.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.CallAsync(System.Reflection.MethodInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>Calls a job method.</summary>
            <param name="method">The job method to call.</param>
            <param name="arguments">The argument names and values to bind to parameters in the job method. In addition to parameter values, these may also include binding data values. </param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will call the job method.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Dispose(System.Boolean)">
            <summary>
            Dispose the instance
            </summary>
            <param name="disposing">True if currently disposing.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.JobHost.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Azure.WebJobs.ITypeLocator">
            <summary>Defines a locator that identifies types that may contain functions for <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> to execute.</summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.ITypeLocator.GetTypes">
            <summary>Retrieves types that may contain functions for <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> to execute.</summary>
            <returns>Types that may contain functions for <see cref="T:Microsoft.Azure.WebJobs.JobHost"/> to execute.</returns>
        </member>
    </members>
</doc>
